[{"content":"","date":"29 November 2023","permalink":"/tags/acceleration/","section":"Tags","summary":"","title":"Acceleration"},{"content":"","date":"29 November 2023","permalink":"/categories/acceleration/","section":"Categories","summary":"","title":"Acceleration"},{"content":"","date":"29 November 2023","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"JOURNAL: Journal of Industrial Information Integration\nAbstract # CPU-accelerated: In this category, TO algorithms numerically calculated using multi CPU cores. GPU-accelerated: Here, algorithms of TO is parallelized using multicore graphics processors to improve the computational time. ML-accelerated: TO problems are addressed using machine learning methods, such as artificial neural networks and image processing techniques, with the purpose of reducing the computation cost. Part of this article is encrypted with password:\n--- DON'T MODIFY THIS LINE ---\rClassification of research works in computational acceleration of TO Question:\nAll of the acceleration techniques, solid mechanics problems were mostly studied, while a few number of research studies are dedicated to heat transfer, fluid flow and electro thermomechanical applications. It should be noted that the computational time does not include any postprocessing such as exporting the result to CAD software or further verification of the obtained topology for certain applications using numerical tools. Softwares:\nCAD CAE nTopology ANSYS Gen3D Comsol Multiphysics Onshape Fusion360 Frustum SolidWorks Optimization Process # Figure 3. General steps of TO algorithm based on example physics: a) heat transfer – heat sink; b) solid mechanics - Messerschmitt-B ̈ olkow-Blohm (MBB) beam Time consuming process:\nSolve equilibrium equations (i.e. state equations) during FEM analysis. Topology optimization is achieved using iterative approach. Influence factors: mesh size, problem dimension, design domain\nCPU-Based # Decomposition Method # a) Elbow design selected for eigenvalue maximization studies; b) Domain decomposition for 36 subdomains; and c) Optimized structure a) Decomposition of the original 3D computational domain into two and three subdomains as an example; b) Communication that takes place at nodes on the boundaries of adjacent subdomains Solve Methods:\nFEM TO Jacobi Preconditioner-based Conjugate Gradient (PCG) Solid Isotropic Material with Penalization (SIMP) Diagonal PCG Method of Moving Asymptotes (MMA) Incomplete LU (ILU) PCG Compactly supported radial basis functions (CSRBFs) Static Condensation \u0026amp; PCG Inherent strain method (ISM) Compactly supported radial basis functions (CSRBFs) Neighboring Node Communication # **There were two types of data communication were considered: **\nBetween the nodes located on the boundaries of adjacent subdomains Between entire subdomains M1: Hilbert space filling curves applied to create non-overlapping subdomains M2: Filtering technique considered for elements residing on subdomain boundary *M3 *: 97% of the computation in TO is related to solve the equilibrium equations and calculation of the sensitivities. $\\Downarrow$ Apply parallel computing to them only. $\\Downarrow$ Master-slave paradigm, where communications are allowed between master processors only but not for slave processors.\nParallel scalability # M1 (CPU): Dual-primal finite element tearing and interconnecting (FETI-DP) solver applying both 2D and 3D, specially developed to solve large-scale finite element models on parallel computers. Solid and void parts of the domain considered separately.\nGolden section search approach # M1 * Pareto curve obtained for L-bracket problem Weight and stiffness were considered as design variables to create a Pareto curve Two points are introduced in golden section search approach and a function or parameter is evaluated and compared in these two points. Further, a new point is introduced next to the chosenpoint to continue searching better design variables until the convergence.* A number of computational cores can be assigned to perform studies on several points to evaluate the Pareto curve independently.**\nFramework # M1 Communication: MPI Direct and indirect solvers: UMFPACK, SuperLU, MUMPS Domian decomposition library: METIS Mesh generation: GMSH, CUBIT Visualization: ParaView. Figure 13. Stokes flow optimization: a) general illustration, where the objective is to minimize the pressure drop between inlets and outlets; b) resulting topology M2\nPETSc: linear to non-linear mechanics, acoustics, fluid mechanics, electromagnetics as well as multiphysics problems.\nTOUU Problem # Focus: Topology optimization under uncertainly (TOUU) of continuum structures, which mainly comes from finite element methods applied on complex geometries and applied uncertainty propagation methods that need statistical metrics evaluation.\nM1 (Distributed Computing) Two-level parallel processing strategy that permits to carry out efficient parallel computation using distributed memory system, where stochastic modes are distributed over the memory network.\nTwo level parallel processing technique The parallel computing in each stochasticmode is further conducted through domain decomposition method and adaptive mesh refinement technique in each subdomain.\nM2 ISM was employedfor the prompt prediction of residual stress and distortion, where it was calculated by means of incompatible strain as well as thermal and plastic strain initiated by nonuniform temperature distribution during the manufacturing process. Thus, TO studies mainly divided into two: TO with gravity only (GraOnly) and TO with gravity and residual stresses (GraAndISM) calculated from ISM method.\na) Illustration of the cantilever beam (grey) with support structure (blue); b) GraOnly study results; and c) GraAndISM study results GPU-Based # Differences between CPU and GPU:\nCPU: multi-core processor with many instructions GPU: many-core processor with a smaller set of instructions. Solve Methods:\nFEM TO Jacobi Preconditioner-based Conjugate Gradient (PCG) Solid Isotropic Material with Penalization (SIMP) Level set method Level set method Co-processor # Since TO is an iterative technique, meaning that the current iteration depends on the previousiteration, it eliminates the possibility of parallelizing the whole process. That’s why GPU is mostly used as a co-processor.\nProblem of distributing high and low conduc tivity inside a rectangular plate to obtain even temperature distribution by large-scale pixel-based material distribution. The rectangular 2D plate as shown in Figure 22 was insulated along boundary $\\Gamma_N$ and had a constant temperature at $\\Gamma_D$. It was heated by sources uniformly distributed within the domain.\nComputational domain (left) and results for N=702 (middle), N=10502 (right) elements Iteration time for different problem size Thesubro solid line: GPU Dotted line: CPU with single core Dashed line: HPC cluster GPU Only # Solving the state equation matrix-free by conjugate gradient (CG) method. Parts: CG iteration, computation of matrix-vector product, residuum and copying.\nCPU and GPU time needed for different subroutines Multi Parallelism Models # TO loop was divided into six modules: FEM assembly, boundary conditions, solver, sensitivity, filter and density update.\nGPU: Cholesky based solver CPU: LAPACK, linear algebra package distributed in AMD Core Math Library Schematic flowchart of the TO implementation CPU: all-in CPU, GPU: all-in GP CPU-X: main in CPU GPU-X: main in GPU Runtime in seconds for three problems Level Set Method On GPU # Implementation of the evolution of level set function happens in the third stage (updated design). On the fourth stage, the padding (to represent void elements at the border) and distance operations are performed.\nAdvantage: all of the optimization operations are performed in Cartesian grids, which makes it easier to parallelize the implementation.\nFlowchart of discrete implementation of TO based level set method Speedup for one iteration of the optimization algorithm in the MBB beam problem SIMP Combine With CUDA And Matlab # Flowchart of implemented TO method Computational time and GPU speedup CUDA Based Framework # Levels:\nData-level: To accelerate calculations required by the optimization process Task-level: To evaluate independent simulation models Models: dbdPCG: DoF-by-DoF CUDA kernel for matrix free Jacobi PCG method for FEA ebeUKU: Element-by-element CUDA kernel for compliance and sensitivity ebeFILTER: Filtering Speedups achieved by custom-developed CUDA kernels Stress Calculation \u0026amp; Volume Fraction Calculation \u0026amp; Density Updating Strategy # Flowchart of the structural optimization process Flowchart of GPU instance SIMP method Coarse And Refined grids # Coarse grid: Finite element method was used to solve state (elastic) equation Refined grid: Finite difference method was used to solve HamiltonJacobi equation. Data transferred between those two equations using the linear restricted operator.\nLeft: coarse to fine grid, right: fine to coarse grid ","date":"29 November 2023","permalink":"/posts/papers/acceleration/computational-acceleration-of-topology-optimization-using-parallel-computing-and-machine-learning-methods-analysis-of-research-trends/","section":"Posts","summary":"\u003cp\u003e\u003cstrong\u003eJOURNAL:\u003c/strong\u003e \u003cem\u003e\u003cstrong\u003eJournal of Industrial Information Integration\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\n\u003cdiv id=\"abstract\" class=\"anchor\"\u003e\u003c/div\u003e\n\u003ch2 class=\"relative group\"\u003eAbstract \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#abstract\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCPU-accelerated: In this category, TO algorithms numerically calculated using multi CPU cores.\u003c/li\u003e\n\u003cli\u003eGPU-accelerated: Here, algorithms of TO is parallelized using multicore graphics processors to improve the computational time.\u003c/li\u003e\n\u003cli\u003eML-accelerated: TO problems are addressed using machine learning methods, such as artificial neural networks and image processing techniques, with the purpose of reducing the computation cost.\u003c/li\u003e\n\u003c/ul\u003e","title":"Computational Acceleration of Topology Optimization Using Parallel Computing and Machine Learning Methods – Analysis of Research Trends"},{"content":"","date":"29 November 2023","permalink":"/tags/paper/","section":"Tags","summary":"","title":"Paper"},{"content":"","date":"29 November 2023","permalink":"/categories/paper/","section":"Categories","summary":"","title":"Paper"},{"content":"","date":"29 November 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"29 November 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"29 November 2023","permalink":"/","section":"Tang Zhu","summary":"","title":"Tang Zhu"},{"content":"","date":"11 September 2023","permalink":"/tags/lib/","section":"Tags","summary":"","title":"Lib"},{"content":"","date":"11 September 2023","permalink":"/categories/lib/","section":"Categories","summary":"","title":"Lib"},{"content":" sample() # Sample the surface of a mesh, returning the specified number of points. For individual triangle sampling uses this method.\nParameters # Parameter Type Using mesh trimesh.Trimesh Geometry to sample the surface of count int Number of points to return face_weight None or len(mesh.faces) float Weight faces by a factor other than face area, if None will be the same as face_weight=mesh.area sample_color bool Option to calculate the color of the sampled points seed None or int If passed as an integer will provide deterministic results, otherwise pulls the seed from operating system entropyn Returns # Return Type Using samples (count, 3) float Points in space on the surface of mesh face_index (count,) int Indices of faces for each sampled point colors (count, 4) float Colors of each sampled point, returns only when the sample_color is True Code # def sample_surface(mesh, count, face_weight=None, sample_color=False, seed=None): if face_weight is None: # len(mesh.faces) float, array of the areas # of each face of the mesh face_weight = mesh.area_faces # cumulative sum of weights (len(mesh.faces)) # np.cumsum([1,2,3,4]) = [1,3,6,10] add all the front elements # using for random sample points search which triangle belong to weight_cum = np.cumsum(face_weight) # seed the random number generator as requested random = default_rng(seed).random # last value of cumulative sum is total summed weight/area # get the reandom points by random weight # these points are used to pick triangles face_pick = random(count) * weight_cum[-1] # get the index of the selected faces # return the index the points belong to (e.g. 2.3-\u0026gt;[1,2,3]:[1,2,2.3,3] then return 2) face_index = np.searchsorted(weight_cum, face_pick) # pull triangles into the form of an origin + 2 vectors # choose the first point as the origin point (n x 3) tri_origins = mesh.vertices[mesh.faces[:, 0]] # copy other two points (2n x 3), getting ordered by faces\u0026#39; column first tri_vectors = mesh.vertices[mesh.faces[:, 1:]].copy() # duplicate the origin points, reshape them for other points to minus them. # let the object to the space (0,0,0) tri_vectors -= np.tile(tri_origins, (1, 2)).reshape((-1, 2, 3)) # pull the vectors for the faces we are going to sample from tri_origins = tri_origins[face_index] tri_vectors = tri_vectors[face_index] if sample_color and hasattr(mesh.visual, \u0026#39;uv\u0026#39;): uv_origins = mesh.visual.uv[mesh.faces[:, 0]] uv_vectors = mesh.visual.uv[mesh.faces[:, 1:]].copy() uv_origins_tile = np.tile(uv_origins, (1, 2)).reshape((-1, 2, 2)) uv_vectors -= uv_origins_tile uv_origins = uv_origins[face_index] uv_vectors = uv_vectors[face_index] # next stage is to use the rectangular sampling method to make the points more uniform # randomly generate two 0-1 scalar components to multiply edge vectors b random_lengths = random((len(tri_vectors), 2, 1)) # points will be distributed on a quadrilateral if we use 2 0-1 samples # if the two scalar components sum less than 1.0 the point will be # inside the triangle, so we find vectors longer than 1.0 and # transform them to be inside the triangle random_test = random_lengths.sum(axis=1).reshape(-1) \u0026gt; 1.0 random_lengths[random_test] -= 1.0 random_lengths = np.abs(random_lengths) # multiply triangle edge vectors by the random lengths and sum sample_vector = (tri_vectors * random_lengths).sum(axis=1) # finally, offset by the origin to generate # (n,3) points in space on the triangle # this is the real points on the surfaces samples = sample_vector + tri_origins if sample_color: if hasattr(mesh.visual, \u0026#39;uv\u0026#39;): sample_uv_vector = (uv_vectors * random_lengths).sum(axis=1) uv_samples = sample_uv_vector + uv_origins texture = mesh.visual.material.image colors = uv_to_interpolated_color(uv_samples, texture) else: colors = mesh.visual.face_colors[face_index] return samples, face_index, colors return samples, face_index ","date":"11 September 2023","permalink":"/posts/python/lib-trimesh/","section":"Posts","summary":"sample() # Sample the surface of a mesh, returning the specified number of points.","title":"Point sampling of triangle mesh"},{"content":"","date":"11 September 2023","permalink":"/tags/python/","section":"Tags","summary":"","title":"Python"},{"content":"","date":"11 September 2023","permalink":"/categories/python/","section":"Categories","summary":"","title":"Python"},{"content":"","date":"10 September 2023","permalink":"/tags/graphics/","section":"Tags","summary":"","title":"Graphics"},{"content":"","date":"10 September 2023","permalink":"/categories/graphics/","section":"Categories","summary":"","title":"Graphics"},{"content":" Triangle Point Picking # Given a triangle with one vertex at the origin and the others at positions $v_1$ and $v_2$, one might think that a random point inside the triangle would be given by $$x=a_1v_1+(1-a_1)a_2v_2 \\tag{1}$$\nwhere $a_1$ and $a_2$ are uniform variates in the interval $[0,1]$. However, as can be seen in the plot above, this samples the triangle nonuniformly, concentrating points in the $v_1$ corner.\nRandomly picking each of the trilinear coordinates from a uniform distribution $[0,1]$ also does not produce a uniform point spacing on in the triangle. As illustrated above, the resulting points are concentrated towards the center.\nTo pick points uniformly distributed inside the triangle, instead pick\n$$x=a_1v_1+a_2v_2 \\tag{2}$$\nwhere $a_1$ and $a_2$ are uniform variates in the interval $[0,1]$, which gives points uniformly distributed in a quadrilateral (left figure). The points not in the triangle interior can then either be discarded, or transformed into the corresponding point inside the triangle (right figure).\nThe expected distance of a point picked at random inside an equilateral triangle of unit side length from the center of the triangle is\n$$ \\delta_{center}=\\frac{1}{72}[8\\sqrt{3}+3sinh^{-1}(\\sqrt{3})+\\ln{(2+\\sqrt{3})}] \\tag{3}$$\nand the expected distance from a fixed vertex is\n$$ \\delta_{vertex}=\\frac{1}{12}(4+3\\ln{3}) \\tag{4}$$ The expected distance from the closest vertex is\n$$ \\delta_{closest \\ vertex}=\\frac{4+3\\ln{3}}{12\\sqrt{3}} \\tag{5}$$\nwhile the expected distance from the farthest is\n$$ \\delta_{farthest \\ vertex}=\\frac{1}{36}[27\\ln{3}+\\sqrt{3}(4+3\\ln{3})-6\\sqrt{3}sinh^{-1}(\\sqrt{3})] \\tag{6}$$ Picking n points independently and uniformly from a triangle with unit area gives a convex hull with expected area of\n$$A(n)\t=\t1-\\frac{2}{n+1}\\sum_{k=1}^{n}{\\frac{1}{k}} \\tag{7}$$\n$$\t=\t1-\\frac{2H_n}{n+1}\t\\tag{8}$$\nwhere $H_n$ is a harmonic number (Buchta 1984, 1986). The first few values are $0$, $0$, $1/12$, $1/6$, $43/180$, $3/10$, $197/560$, \u0026hellip; (OEIS A093762 and A093763). This is a special case of simplex simplex picking.\n","date":"10 September 2023","permalink":"/posts/graphics/point-sampling-of-triangle-mesh/","section":"Posts","summary":"\u003cdiv id=\"triangle-point-picking\" class=\"anchor\"\u003e\u003c/div\u003e\n\u003ch1 class=\"relative group\"\u003eTriangle Point Picking \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#triangle-point-picking\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\u003c/span\u003e        \n    \n\u003c/h1\u003e","title":"Point sampling of triangle mesh"},{"content":"","date":"10 September 2023","permalink":"/tags/theory/","section":"Tags","summary":"","title":"Theory"},{"content":"","date":"10 September 2023","permalink":"/categories/theory/","section":"Categories","summary":"","title":"Theory"},{"content":"","date":"29 May 2023","permalink":"/tags/code-analysis/","section":"Tags","summary":"","title":"Code Analysis"},{"content":"","date":"29 May 2023","permalink":"/categories/code-analysis/","section":"Categories","summary":"","title":"Code Analysis"},{"content":" futtop.c # Entrance of the whole program, and includes fellow functions:\nSetup OpenMP and futhark backends (Multicore, OpenCL or CUDA). Setup models (Cantilever, MBB Beam) by calculating Vertices, Nodal Force, etc . Setup variables (Force, Displacement, Density, etc) about optimization. Run following Construct Multigrid, Slove State System (K$\\mu$ = f), Compute New $x$, Get New Density. ","date":"29 May 2023","permalink":"/posts/topopt-futtop/code-analysis-topopt-futtop/","section":"Posts","summary":"","title":"Code Analysis topopt-futtop"},{"content":"","date":"29 May 2023","permalink":"/tags/program/","section":"Tags","summary":"","title":"Program"},{"content":"","date":"29 May 2023","permalink":"/categories/program/","section":"Categories","summary":"","title":"Program"},{"content":"","date":"29 May 2023","permalink":"/tags/topopt-futtop/","section":"Tags","summary":"","title":"topopt-futtop"},{"content":"","date":"23 May 2023","permalink":"/tags/elasticity/","section":"Tags","summary":"","title":"Elasticity"},{"content":"","date":"23 May 2023","permalink":"/categories/elasticity/","section":"Categories","summary":"","title":"Elasticity"},{"content":"","date":"23 May 2023","permalink":"/tags/optimization/","section":"Tags","summary":"","title":"Optimization"},{"content":"","date":"23 May 2023","permalink":"/categories/optimization/","section":"Categories","summary":"","title":"Optimization"},{"content":"Items: Stress, Stress tensor, Strain, Strain tensor, Strain energy, Elastic deformation, Plastic deformation, Small strain linear elasticity, Elastic modulus (or Young\u0026rsquo;s modulus), Strain energy density, Lamé parameters.\nStress # Stress is the distribution of internal forces per unit area within a material, usually represented by the symbol $\\sigma$. The unit of stress is Pascal ($Pa$), which is equal to Newton per square meter ($N/m^{2}$). The equation for stress can be expressed as\n$$\\sigma = \\frac{F}{A}$$\nwhere $F$ represents the force applied to the object in Newtons ($N$) or kilonewtons ($kN$) and $A$ represents the area of the object subjected to the force in square meters ($m^{2}$) or square centimeters ($cm^{2}$).\nStress is a measure of the deformation or strain that occurs in a material when subjected to external forces. In materials science and engineering, stress is an important parameter used for designing and analyzing the strength and stability of various structures and mechanical components.\nThere are different types of stress, including tensile stress, compressive stress, and shear stress. Tensile stress is the stress that occurs in a material when it is pulled or stretched, while compressive stress is the stress that occurs when it is compressed or squeezed. Shear stress is the stress that results from the relative sliding between the molecular planes of a material, commonly observed in cutting operations and shearing forces.\nThe magnitude and direction of stress have significant effects on the strength and deformation of a material. If the stress exceeds the ultimate strength of a material, it will fail or break. Therefore, stress analysis is a critical part of engineering design to ensure the safety and reliability of structures and mechanical components.\nStress tensor # Stress tensor is a mathematical object used to describe the state of stress to which a solid is subjected internally. It is a second-order tensor containing nine components representing the positive and shear stresses in three coordinate directions. In three-dimensional space, the stress tensor can be represented as a $3\\times3$ matrix as follows\n$$ \\epsilon = \\begin{bmatrix} \\sigma_{xx} \u0026amp; sigma_{xy} \u0026amp; sigma_{xz} \\ \\sigma_{yx} \u0026amp; sigma_{yy} \u0026amp; sigma_{yz} \\ \\sigma_{zx} \u0026amp; sigma_{zy} \u0026amp; sigma_{zz} \\end{bmatrix} $$\nwhere $\\sigma_{ij}$ indicates that the stress component in the $i$-th coordinate direction is caused by the stress in the $j$-th coordinate direction. The symmetry of the stress tensor indicates the equilibrium of the forces, i.e., the sum of the tangential stresses in any plane is zero.\nIn two dimensions, the stress tensor is represented by a $2\\times2$ symmetric matrix, and its components are denoted by $\\sigma_{xx}$, $\\sigma_{yy}$, $\\sigma_{xy}$, and $\\sigma_{yx}$.\nThe stress tensor in two dimensions can be written as:\n$$ \\epsilon = \\begin{bmatrix} \\sigma_{xx} \u0026amp; sigma_{xy} \\ \\sigma_{yx} \u0026amp; sigma_{yy} \\ \\end{bmatrix} $$\nwhere $\\sigma_{xx}$ and $\\sigma_{yy}$ are the normal stresses acting on the $x$ and y planes, respectively, $\\sigma_{xy}$, and $\\sigma_{yx}$ is the shear stress acting on the $xy$ plane.\nThe stress tensor can be solved by applying an external force to an object and then measuring the stress inside the object. It is an important concept in the fields of elastodynamics, mechanics of materials, solid mechanics, and fluid mechanics. The stress tensor can also be used to calculate the strain tensor, which describes the deformation within a solid.\nStrain # Strain is the degree of deformation of an object under the action of an external force and is usually expressed as ε. Strain can be divided into different types, including linear strain, shear strain, and volume strain, etc. Each type of strain has different calculation formulae.\nLinear or axial strain Linear strain refers to the degree of deformation of an object when it is stretched or compressed in a certain direction. The formula for calculating linear strain is\n$$ \\epsilon = \\frac{\\Delta L}{L_{0}}$$\nwhere $\\epsilon$ represents the linear strain, $\\Delta L$ represents the amount of change in the length of the object, and $L_{0}$ represents the original length of the object.\nShear strain Shear strain is the degree of deformation that occurs when an object is subjected to a cutting force. The formula for calculating shear strain is\n$$\\gamma = \\frac{\\Delta x}{h}$$\nwhere $\\gamma$ is the shear strain, $\\Delta x$ is the displacement of the object shear, and $h$ is the thickness of the object shear surface.\nVolumetric strain Volumetric strain is the degree of change in the overall volume of an object when subjected to an external force. The formula for calculating the volumetric strain is\n$$ \\epsilon_{v} = \\frac{\\Delta V}{V_{0}}$$\nwhere $\\epsilon_{v}$ denotes the volume strain, $\\Delta V$ denotes the amount of change in the volume of the object, and $V_{0}$ denotes the original volume of the object.\nThe appropriate strain formula needs to be selected for the calculation according to the specific type of strain and the deformation of the object. Different types of strains have different importance and uses in different mechanical and engineering applications.\nStrain tensor # Strain tensor is a mathematical object that describes the deformation of a solid body in response to an applied stress. It is a second-order tensor, meaning it has both magnitude and direction.\nThe strain tensor is defined as the relative change in length between two infinitesimally close points within the body in response to an applied stress. It can be expressed as a matrix of six components in three dimensions, or as a vector in two dimensions.\nIn three dimensions, the strain tensor can be represented as:\n$$ \\epsilon = \\begin{bmatrix} \\epsilon_{xx} \u0026amp; epsilon_{xy} \u0026amp; epsilon_{xz} \\ \\epsilon_{yx} \u0026amp; epsilon_{yy} \u0026amp; epsilon_{yz} \\ \\epsilon_{zx} \u0026amp; epsilon_{zy} \u0026amp; epsilon_{zz} \\end{bmatrix} $$\nwhere $\\epsilon_{ij}$ represents the strain in the $i-th$ direction caused by a stress in the $j-th$ direction.\nIn two dimensions, the strain tensor can be represented as: $$ \\epsilon = \\begin{bmatrix} \\epsilon_{xx} \u0026amp; epsilon_{xy} \\ \\epsilon_{yx} \u0026amp; epsilon_{yy} \\ \\end{bmatrix} $$ where $\\epsilon_{xx}$ and $\\epsilon_{yy}$ represent the strains in the $x$- and $y$-directions, respectively, $\\epsilon_{xy}$ and $\\epsilon_{yx}$ represents the shear strain.\nThe strain tensor is an important quantity in solid mechanics, as it is used to calculate the stress tensor, which describes the distribution of stresses within the body. The strain tensor can also be used to calculate other mechanical properties of the material, such as the elastic modulus and Poisson\u0026rsquo;s ratio.\nStrain energy # **Strain energy **is the energy stored inside an object due to stress. Under stress, an object is deformed, which leads to the accumulation of deformation energy inside the object. Strain energy is usually expressed in mathematical form as the volume integral of an object, and it is an important parameter to describe the elastic behavior of an object.\nThe magnitude of the strain energy depends on the shape and size of the object, the material properties and the force applied to the object. When the applied force exceeds the elastic limit of the object, the strain energy will be released, resulting in plastic deformation or destruction of the object. Therefore, strain energy is an important indicator to assess whether an object has sufficient strength and stability under force.\nIn engineering design and structural optimization, strain energy is often used as a design objective or optimization indicator. For example, when designing automotive structures, strain energy can be used to optimize the stiffness and weight of a vehicle frame. When designing mechanical parts, strain energy can be used to optimize the material use and weight reduction of the part. By optimizing strain energy, more efficient, reliable and economical designs can be achieved.\nElastic deformation \u0026amp; Plastic deformation # Elastic deformation refers to the reversible deformation of a material when subjected to stress. That is, when external forces are removed, the object can return to its original shape. Elastic deformation typically occurs when the applied stress is below the elastic limit of the material.\nPlastic deformation refers to the irreversible deformation of a material when subjected to stress. Unlike elastic deformation, plastic deformation does not return to its original shape when the external forces are removed. Plastic deformation typically occurs when the applied stress exceeds the elastic limit of the material. When a material is subjected to sufficiently large stresses, the atoms or molecules within it will begin to move and deform until they reach a new equilibrium position. This results in permanent changes to the shape and volume of the material.\nSmall strain linear elasticity # Small strain linear elasticity is a branch of continuum mechanics that deals with the behavior of materials under small deformations or strains. In this framework, it is assumed that the deformation is sufficiently small such that the relationship between stress and strain can be approximated as linear, meaning that the deformation is proportional to the applied stress and returns to its original shape when the stress is removed. This linear relationship is described by Hooke\u0026rsquo;s law, which states that the stress is proportional to the strain.\nMathematically, this relationship can be expressed as $\\sigma = C \\epsilon$, where $\\sigma$ is the stress tensor, $\\epsilon$ is the strain tensor, and $C$ is the fourth-order elastic stiffness tensor. The stiffness tensor contains information about the material properties and can be determined experimentally or theoretically.\nThe small strain assumption means that the magnitude of the deformation is much smaller than the size of the object being deformed. This assumption allows for simplifications in mathematical computations and is valid for most engineering applications, including the design of structures and machines, the analysis of geological formations, and the development of new materials. It is an important tool for understanding the mechanical behavior of materials and predicting their response to external loads.\nElastic modulus (or Young\u0026rsquo;s modulus) # Elastic modulus is a measure of the stiffness or elasticity of a material, usually denoted by the symbol $E$. Elastic modulus is given by\n$$E = \\frac{\\sigma}{\\epsilon}$$\nwhere E denotes the modulus of elasticity in pascals ($Pa$) or kilopascals ($kPa$); $\\sigma$ denotes the stress in pascals; and $\\epsilon$ denotes the strain, unitless.\nElastic modulus is the ratio of the elastic deformation of a material to the area subjected to an external force. It is the ratio of the degree of elastic deformation produced by a material when subjected to an external force to the area subjected to the force, and can also be expressed as the amount of elastic energy stored per unit volume. The higher the modulus of elasticity, the more difficult it is for the material to deform or distort, and the higher the stiffness.\nElastic modulus is commonly used to describe the elastic properties of various materials, including solids, liquids and gases. In solid materials, the modulus of elasticity can be used to calculate the relationship between stress and strain when a material is subjected to a force. It is an important parameter for the elastic behavior of materials and is of great importance for engineering design and material selection.\nElastic modulus of different materials can vary greatly, for example, the modulus of elasticity of steel is about $2.1\\times10^{11} Pa$, the modulus of elasticity of aluminum is about $7\\times10^{10} Pa$, and the modulus of elasticity of rubber is only about a few million $Pa$.\nElastic modulus can be measured by various experimental methods, such as tensile test, compression test and bending test. In engineering design, elastic modulus is often used to calculate and predict the deformation and damage behavior of materials under different loads to ensure that the designed structures and materials will meet the expected usage requirements.\nStrain energy density # Strain energy density is a measure of the amount of energy stored within a material per unit volume due to its deformation or strain. When a material is subjected to external forces, it undergoes deformation, and some of the energy of the system is stored within the material in the form of strain energy.\nThe strain energy density is represented by the symbol $u$ (sometimes also denoted by $W$) and is typically expressed in units of joules per cubic meter ($J/m^{3}$). It is calculated by dividing the strain energy of a material by its volume. The equation for the strain energy density is\n$$u = \\frac{1}{2} \\times σ \\times ε = \\frac{1}{2} \\times (E \\times \\epsilon^{2}) $$\nσ denotes the stress in pascals ($Pa$); and $\\epsilon$ denotes the strain, unitless, and $E$ denotes the modulus of elasticity of the object. The $\\frac{1}{2}$ in the formula is because the elastic potential energy is generated by the deformation in both directions, tensile and compressive, which are equal and therefore need to be averaged.\nStrain energy density plays an important role in determining the mechanical properties of materials, such as their stiffness, strength, and toughness. It is often used in engineering applications to design and analyze the behavior of materials under different loading conditions.\nFor example, in the design of a spring, the strain energy density is a key factor in determining the amount of deformation that the spring can undergo before reaching its maximum load capacity. By calculating the strain energy density, engineers can optimize the design of the spring to achieve the desired level of performance and reliability.\nDifferents between elastic modulus and strain energy density # Elastic modulus and strain energy density are both important parameters in the mechanics of materials, but they describe different material properties.\nElastic modulus (also known as the coefficient of elasticity) is a measure of the stiffness or elasticity of a material and is usually denoted by the symbol E. It is the ratio of the degree of elastic deformation produced by a material when subjected to an external force to the area subjected to the force, and can also be expressed as the amount of elastic energy stored per unit volume. The greater the modulus of elasticity, the more difficult it is for the material to deform or distort, and the higher the stiffness. The unit of modulus of elasticity is Pascal ($Pa$) or kilopascal ($kPa$).\nStrain energy density is the density of energy stored in the material during deformation, usually expressed by the symbol u. It is the ratio of strain energy to volume of the material in joules per cubic meter ($J/m^{3}$). When a material is subjected to an external force, it deforms and this deformation stores energy, which is recovered in the form of strain energy density to describe the process when the external force stops acting on the material. Strain energy density can be used to predict properties such as stability and strength of a material during deformation.\nAlthough both elastic modulus and strain energy density describe the mechanical properties of a material, they describe slightly different aspects. Elastic modulus is more concerned with the stiffness and elastic properties of a material, while strain energy density is more concerned with the energy storage and release properties of a material.\nLamé parameters # Lamé parameters, also known as Lamé coefficients, are two material constants that describe the elastic properties of a solid material. They are named after the French mathematician Gabriel Lamé who introduced them in the mid-19th century.\nThe two Lamé parameters are denoted by $\\lambda$ and $\\mu$, where $\\lambda$ is the first Lamé parameter (also known as the \u0026ldquo;Lamé constant\u0026rdquo; or \u0026ldquo;Lamé modulus\u0026rdquo;) and $\\mu$ is the second Lamé parameter (also known as the \u0026ldquo;shear modulus\u0026rdquo; or \u0026ldquo;rigidity modulus\u0026rdquo;).\nIn terms of these parameters, the stress tensor can be expressed as a function of the strain tensor using the linear elasticity equations. Specifically, for a linear elastic material, the stress tensor $\\sigma$ is related to the strain tensor $\\epsilon$ by the equation:\n$$\\sigma = \\lambda tr(\\epsilon) I + 2\\mu\\epsilon$$\nwhere $tr(\\epsilon)$ is the trace of the strain tensor (the sum of its diagonal elements), $I$ is the identity matrix, and $\\epsilon$ is the strain tensor.\nThe Lamé parameters are important in the study of elasticity, plasticity, and deformation of solids, and are used to characterize the mechanical behavior of materials under various loading conditions. They are typically determined experimentally and can vary significantly depending on the material composition and structure.\n","date":"23 May 2023","permalink":"/posts/elastodynamics/elastodynamics-note-1/","section":"Posts","summary":"\u003cp\u003e\u003cstrong\u003eItems\u003c/strong\u003e: Stress, Stress tensor, Strain, Strain tensor, Strain energy, Elastic deformation, Plastic deformation, Small strain linear elasticity, Elastic modulus (or Young\u0026rsquo;s modulus), Strain energy density,  Lamé parameters.\u003c/p\u003e","title":"Theory of Elasticity Note 1"},{"content":"Items: Compliance minimization, Density filtering, Volume constraint, Non-physical phenomena, Chequer-boarding, Stiffness interpolation, Solid Isotropic Material Penalisation (SIMP), Optimality Criteria (OC), Linear system, Matrix-free operator, Aassembly of coarse operators.\nCompliance minimization \u0026amp; Density filtering \u0026amp; Volume constraint # Compliance minimization with density filtering and a volume constraint is a problem commonly encountered in structural optimization. The goal is to design a structure that is both strong enough to withstand its intended loads and lightweight, to minimize material usage and cost.\nDensity filtering is a technique used to remove low-density elements from the design domain. The idea is to exclude regions with low material density that are unlikely to contribute significantly to the structural stiffness. This can help to reduce the overall weight of the structure.\nVolume constraint, on the other hand, places a limit on the total amount of material used in the design. This can be expressed as a percentage of the total volume of the structure or as a maximum allowable mass. The volume constraint ensures that the optimization process results in a design that is physically feasible and does not exceed the available resources.\nThe compliance minimization objective is to minimize the deformation or strain energy of the structure subject to the loads and boundary conditions. This objective function captures the overall stiffness of the structure, which is a key performance criterion for many engineering applications.\nTo solve this problem, various optimization techniques can be used, including gradient-based methods, evolutionary algorithms, and topology optimization methods. These methods can be combined with density filtering and volume constraints to generate designs that meet the desired specifications.\nIn summary, compliance minimization with density filtering and a volume constraint is a common problem in structural optimization that aims to design a lightweight and strong structure. The problem can be solved using various optimization techniques, including density filtering and volume constraints, to generate designs that meet the desired performance criteria while satisfying physical constraints.\nNon-physical phenomena \u0026amp; Chequer-boarding # Non-physical phenomena refers to the phenomena or effects that are not determined by physical factors when simulating or describing a physical system. These phenomena or effects are usually caused by numerical or algorithmic issues of the simulation or description method itself.\nChequer-boarding is a type of non-physical phenomenon that often occurs in computational fluid dynamics (CFD). It refers to the alternating high and low pressure regions appearing on the mesh points in the simulated flow field, which can be metaphorically compared to the black and white squares on a checkerboard. This phenomenon is typically caused by the instability and inappropriate mesh partition of numerical methods, resulting in the inaccuracy and unreliability of the simulation results.\nTo avoid non-physical phenomena like chequer-boarding, some improvements in numerical methods and mesh partition are usually required. For example, higher-order accuracy numerical methods, improved discretization schemes, finer mesh partition, and some smoothing techniques can be adopted to enhance the accuracy and reliability of the flow field simulation.\nDensity filtering is a commonly used technique in topology optimization that can partially address non-physical phenomena such as chequer-boarding. Density filtering can be understood as a smoothing operation on the design domain during the optimization process, which removes some geometric features that are unreasonable and produces a more rational design. In some cases, density filtering can reduce the occurrence of chequer-boarding by suppressing high-frequency oscillations.\nDensity filtering usually involves the concept of a filtering radius, which means that for a given element to be optimized, the density values of the neighboring elements within a certain radius are averaged to obtain the new density value of the element. By continually applying this smoothing operation, a smoother density distribution can be obtained, avoiding the appearance of some unreasonable geometric features. At the same time, due to the smoothing effect of this processing method, some high-frequency oscillations are also eliminated or weakened, thereby achieving the goal of reducing chequer-boarding.\nIt should be noted that the application of density filtering needs to be performed under appropriate circumstances, as excessive smoothing can also have adverse effects on optimization results. Therefore, in practical applications, the specific parameters and usage of density filtering need to be determined by considering factors such as optimization efficiency and computational efficiency.\nStiffness interpolation # Stiffness interpolation refers to a technique in finite element analysis where the stiffness matrix of an element is calculated based on the properties of its constituent materials. In stiffness interpolation, the element\u0026rsquo;s stiffness matrix is represented as a linear combination of the stiffness matrices of the constituent materials, weighted by their volume fractions within the element.\nStiffness interpolation is used in multiscale and multiphysics simulations, where the properties of materials may vary across different length scales or under different loading conditions. By using stiffness interpolation, the properties of each material within an element can be taken into account when calculating the overall stiffness matrix of the element. This allows for more accurate simulations of complex structures and materials.\nOne common approach for stiffness interpolation is the Voigt-Reuss-Hill (VRH) method, which represents the overall stiffness matrix of an element as the arithmetic or geometric mean of the stiffness matrices of its constituent materials. Other methods, such as the Mori-Tanaka method and the self-consistent method, may also be used depending on the specific requirements of the simulation.\nSolid Isotropic Material Penalisation (SIMP) # Solid Isotropic Material Penalisation (SIMP) is a numerical method commonly used in structural optimization. The basic idea is to use material density as the optimization variable to find the optimal material distribution that satisfies the given performance indicators and constraints.\nIn the SIMP method, the structure is divided into many small elements, and each element is assigned a material density that varies continuously between 0 and 1. During the optimization process, the optimization algorithm adjusts the density of each element to achieve the best structural performance. The SIMP method typically uses penalty functions to restrict the range of material densities between $0$ and $1$, thus constraining the material density. Therefore, a penalty function is needed to constrain the range of material density to avoid non-physical material density distributions.\nOne common penalty function is the Power Law Function, which is typically written as: $$ \\rho^{p} $$\nHere, $\\rho$ represents material density, and $p$ is a positive real number. When $p$ is larger, the penalty function has a more significant effect. This penalty function can constrain the values of material density between $0$ and $1$, avoiding non-physical material density distributions and improving the reliability of the optimization results.\nThe SIMP method also uses the equivalent Young\u0026rsquo;s modulus to represent the stiffness of the material. The equivalent Young\u0026rsquo;s modulus is a function of density that represents the effect of material density on stiffness. Typically, the equivalent Young\u0026rsquo;s modulus increases as material density increases, as higher density materials have higher stiffness.\nDuring the optimization process, the SIMP method calculates the equivalent Young\u0026rsquo;s modulus of the material and uses it to calculate the stiffness matrix of the entire structure. By considering the equivalent Young\u0026rsquo;s modulus of the material, the SIMP method can automatically consider the effect of the material\u0026rsquo;s topology on the stiffness of the structure.\nOne important application of the SIMP method is to achieve lightweight design in structural design. By using the SIMP method, the optimal material distribution can be found to minimize the total mass of the structure while satisfying the given performance indicators and constraints. The SIMP method has been widely used in structural optimization in aerospace, automotive, and mechanical engineering, and has been widely applied in material design.\nOptimality Criteria (OC) # Optimality Criteria (OC) method is a popular approach used in structural optimization for solving problems related to minimization of the weight or maximization of the stiffness of a structure subjected to certain constraints. In this method, the structure is discretized into finite elements, and the design variables are associated with the properties of these elements.\nThe OC method is based on the assumption that the optimal solution is achieved when certain optimality criteria are satisfied. These criteria are formulated as a set of nonlinear equations that are solved iteratively to obtain the optimal solution. The basic idea of the OC method is to reduce the compliance of the structure by modifying the properties of the finite elements in such a way that the optimality criteria are satisfied.\nThe OC method has several advantages, such as its simplicity and ability to handle problems with large numbers of design variables. However, it also has some limitations, such as its reliance on heuristics and the lack of a formal convergence analysis.\nIn recent years, several variations of the OC method have been proposed, such as the Bi-Directional Evolutionary Structural Optimization (BESO) and the Extended Optimality Criteria (EOC) method, which aim to overcome some of the limitations of the traditional OC method.\nLinear system # Linear system refers to a system of linear equations, where each equation is linear in its variables. In other words, the variables are raised only to the power of 1 and multiplied by constants. A linear system can be represented in matrix form as $Ax = b$, where A is the coefficient matrix, x is the vector of variables, and b is the vector of constants. Linear systems are commonly used in many fields, such as engineering, physics, economics, and computer science. They can be solved using various methods, such as Gaussian elimination, LU decomposition, and matrix inversion.\nMatrix-free operator # Matrix-free operator refers to a method for performing matrix-vector multiplication in which the explicit construction of the matrix is not required. Instead, the operator is defined by a set of algorithms or functions that compute the result of multiplying a given vector by the matrix without explicitly forming the matrix. This approach can be useful for large-scale problems where the storage and computation requirements of the matrix are prohibitive. Instead, only the necessary information to perform the matrix-vector multiplication is stored, leading to more efficient computations.\nAassembly of coarse operators # Aassembly of coarse operators is a fundamental step in the construction of multigrid methods, which are numerical algorithms used to solve large systems of equations arising from partial differential equations (PDEs). In particular, coarse operators play a crucial role in the process of transferring information between different levels of resolution within a multigrid hierarchy.\nThe assembly of coarse operators involves constructing a matrix that approximates the behavior of the fine-scale operator on a given coarse grid. This coarse operator matrix can then be used to solve the system of equations on the coarse grid more efficiently than solving the full system directly.\nThe construction of the coarse operator matrix typically involves two main steps: restriction and interpolation. The restriction step involves reducing the solution and right-hand sides of the fine-scale system to their corresponding counterparts on the coarse grid, while the interpolation step involves mapping the coarse-grid solution back to the fine grid. These steps require careful consideration of the underlying PDE and the chosen discretization scheme.\nIn summary, the assembly of coarse operators is a key component of multigrid methods for solving PDEs. It involves constructing a matrix that approximates the behavior of the fine-scale operator on a given coarse grid, using a combination of restriction and interpolation operations.\n","date":"23 May 2023","permalink":"/posts/topology-optimization/topology-optimization-note-1/","section":"Posts","summary":"\u003cp\u003e\u003cstrong\u003eItems\u003c/strong\u003e: Compliance minimization, Density filtering, Volume constraint, Non-physical phenomena, Chequer-boarding, Stiffness interpolation, Solid Isotropic Material Penalisation (SIMP), Optimality Criteria (OC), Linear system, Matrix-free operator, Aassembly of coarse operators.\u003c/p\u003e","title":"Topology Optimization Note 1"},{"content":"","date":"9 March 2023","permalink":"/categories/_misc/","section":"Categories","summary":"","title":"_Misc"},{"content":"This article will introduce the programming of C++20, mainly focus on the Differences between C++ early version and the C++20, also including some basic concepts of C++.\nPart of this article is encrypted with password:\n--- DON'T MODIFY THIS LINE ---\rTo read this article, you need prepare some basic programming knowledge of C++.\nBasic Programming # Importing Modules # C++20 uses import declaration end with ';' to instead of #include preprocessor directive in early version.\nimport \u0026lt;iostream\u0026gt;; //C++20 #include \u0026lt;iostream\u0026gt; //early version Preprocessor Directives # C++20 uses #pragma once to instead of #ifndef...#endif to avoid re-importing the same module.\n//C++20 #pragma once //... codes //early version #ifndef MYCODE #define MYCODE //..codes #endif Nested Namesapce # A nested namespace is a namespace inside another one. Each namespace is separated by a double colon. Here the difference after and before C++17\n//after C++17 namespace MyLibraries::Networking::FTP { /* ... */ } //early version namespace MyLibraries { namespace Networking { namespace FTP { /* ... */ } } } Namespace Alias # A namespace alias can be used to give a new and possibly shorter name to another namespace. Here’s an example:\nnamespace MyFTP = MyLibraries::Networking::FTP; Numeric literals # Digits separators can be used in numeric literals. A digits separator is a single quote character. For example:\n23\u0026#39;456\u0026#39;789 0.123\u0026#39;456f Variables # Uniform initialization '{}' was introduced with the C++11 standard instead of using assignment synatx '='.\nint v {7}; //C++11 int v = 7; //early version C++20 provides char8_t, char16_t, char32_t to represent A single n-bit UTF-n-encoded Unicode character where n can be 8, 16, or 32.\n*Before C++20 wchar_t was used to process Unicode character.\n//C++ char8_t c8 {u8\u0026#39;m\u0026#39;}; char16_t c16 {u\u0026#39;m\u0026#39;}; char32_t c32 {U\u0026#39;m\u0026#39;}; //early version wchar_t w {L\u0026#39;m\u0026#39;}; C++17 provides std::byte to handle byte type instead of using char type.\nstd::byte b { 42 }; Numerical Limits # C++ it’s recommended to use the std::numeric_limits class tem- plate defined in \u0026lt;limits\u0026gt;, instead of using #defines such as INT_MAX in C.\n//C++ standard cout \u0026lt;\u0026lt; \u0026#34;int:\\n\u0026#34;; cout \u0026lt;\u0026lt; format(\u0026#34;Max int value: {}\\n\u0026#34;, numeric_limits\u0026lt;int\u0026gt;::max()); cout \u0026lt;\u0026lt; format(\u0026#34;Min int value: {}\\n\u0026#34;, numeric_limits\u0026lt;int\u0026gt;::min()); cout \u0026lt;\u0026lt; format(\u0026#34;Lowest int value: {}\\n\u0026#34;, numeric_limits\u0026lt;int\u0026gt;::lowest()); cout \u0026lt;\u0026lt; \u0026#34;\\ndouble:\\n\u0026#34;; cout \u0026lt;\u0026lt; format(\u0026#34;Max double value: {}\\n\u0026#34;, numeric_limits\u0026lt;double\u0026gt;::max()); cout \u0026lt;\u0026lt; format(\u0026#34;Min double value: {}\\n\u0026#34;, numeric_limits\u0026lt;double\u0026gt;::min()); cout \u0026lt;\u0026lt; format(\u0026#34;Lowest double value: {}\\n\u0026#34;, numeric_limits\u0026lt;double\u0026gt;::lowest()); The output of this code snippet on my system is as follows:\nint: Max int value: 2147483647 Min int value: -2147483648 Lowest int value: -2147483648 double: Max double value: 1.79769e+308 Min double value: 2.22507e-308 Lowest double value: -1.79769e+308 Note the differences between min() and lowest(). For an integer, the minimum value equals the lowest value. However, for floating-point types, the minimum value is the smallest positive value that can be represented, while the lowest value is the most negative value representable, which equals -max().\n","date":"9 March 2023","permalink":"/posts/cxx/cxx-20-programming/","section":"Posts","summary":"\u003cp\u003eThis article will introduce the programming of \u003cstrong\u003eC++20\u003c/strong\u003e, mainly focus on the \u003cstrong\u003eDifferences\u003c/strong\u003e between \u003cstrong\u003eC++ early version\u003c/strong\u003e and the \u003cstrong\u003eC++20\u003c/strong\u003e, also including some basic concepts of C++.\u003c/p\u003e","title":"C++20 Programming"},{"content":"","date":"12 January 2023","permalink":"/tags/javascript/","section":"Tags","summary":"","title":"Javascript"},{"content":"","date":"12 January 2023","permalink":"/categories/javascript/","section":"Categories","summary":"","title":"Javascript"},{"content":"This chapter will introduce the basic concept of Javascript and basic rules include grammar, variable, function and so on.\nIntroduction # JavaScript is a cross-platform, object-oriented scripting language used to make webpages interactive (e.g., having complex animations, clickable buttons, popup menus, etc.). There are also more advanced server side versions of JavaScript such as Node.js, which allow you to add more functionality to a website than downloading files (such as realtime collaboration between multiple computers). Inside a host environment (for example, a web browser), JavaScript can be connected to the objects of its environment to provide programmatic control over them.\nUsage # The usage of Javascript can be divided into INSIDE OF HTML and OUTSIDE OF HTML\nInside of HTML # For inside of HTML, Javascript must be placed between \u0026lt;script\u0026gt; and \u0026lt;/script\u0026gt;. And that should be located in \u0026lt;body\u0026gt; or \u0026lt;head\u0026gt; label or both of them.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; document.write(\u0026#34;\u0026lt;h1\u0026gt;this is a theme\u0026lt;/h1\u0026gt;\u0026#34;); // this is a theme document.write(\u0026#34;\u0026lt;p\u0026gt;this is a paragraph\u0026lt;/p\u0026gt;\u0026#34;); // this is a paragraph \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Outside of HTML # Javascript can be separated from HTML as a independent file named .js. .js file can be imported in html between \u0026lt;script\u0026gt; by assign src same as inside of HTML.\n// myScript.js file function myFunction() { document.getElementById(\u0026#34;demo\u0026#34;).innerHTML=\u0026#34;helle world\u0026#34;; } \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script src=\u0026#34;myScript.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- hello world --\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Run in Chrome # Chrome browser is a good tool for debugging Javascript. For starting debug function, there are three ways.\nPress F12. Right-click and choose Check. Click More button, choose More tools, choose Developer tools. Debug in Console # You can directly write or copy code in Console window to debug it by press Enter.\nconsole.log(\u0026#34;hello world\u0026#34;) Debug in Snippets # You can also debug code by Snippets window by creating a new snippet. (Select the Sources window and click More button, you will find Snippets in new Chrome version.)\nCreate a new snippet, input your code, Ctrl + S (Windows and Linxe) or Command + S (Mac) to save the file, and then Right-click the file to run it.\nconsole.log(\u0026#34;hello world\u0026#34;) console.log(\u0026#34;my name is Kiona\u0026#34;) Output # Javascript itself doesn\u0026rsquo;t have any print or output function. Javascript can show data by four ways.\nwindows.alert() pop up window from browser. console.log() show in the browser console. document.write() write content into HTML document. innerHTML write content into HTML label. Window Alert # \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; window.alert(5 + 6); // pop up 11 from window alert \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Console Log # Only used for browser which support debug ability such as Chrome.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; a = 5; b = 6; c = a + b; console.log(c); // show 11 in the debug console \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; HTML Document # Write the content into HTML document directly, and show in the browser.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; document.write(Date()); // Thu Jan 12 2023 16:26:01 GMT+0800 \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; HTML Label # Show the message by modifying the HTML label\u0026rsquo;s content.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p id=\u0026#34;demo\u0026#34;\u0026gt;hello world\u0026lt;/p\u0026gt; \u0026lt;!-- \u0026#34;hello world\u0026#34; will be changed to \u0026#34;I\u0026#39;m Kiona\u0026#34; --\u0026gt; \u0026lt;script\u0026gt; document.getElementById(\u0026#34;demo\u0026#34;).innerHTML = \u0026#34;I\u0026#39;m Kiona\u0026#34;; \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Grammar # Literal # Literal is a element with solid value.\nLiteral Description Example Number Number is integer or decimal, or scientific count. (e/E) 3.14, 1001, 123e5 String String use double or single quotation as the mark. ('' or \u0026quot;\u0026quot;) \u0026quot;Kiona\u0026quot;, 'Kiona' Expression Expression is used for calculation 5+6, 5*6 Arry Arry is used for a set of data (support different types), and use middle bracket as the mark. ([]) [1, \u0026quot;hello\u0026quot;] Object Object is used to define a Key and its value. {class:\u0026quot;lion\u0026quot;, color:\u0026quot;yellow\u0026quot;, age:5} Function Function is used to define a function. function myFunction(a, b){return a*b;} Variable # Variable is different from literal, its value can be changed in any time. Javascript support a lot of data types (e.g. int, float, double, string) and you don\u0026rsquo;t need to specify data type in declaration.\nvar length = 16; var points = x * 10; var lastName = \u0026#34;Johnson\u0026#34;; var cars = [\u0026#34;Saab\u0026#34;, \u0026#34;Volvo\u0026#34;, \u0026#34;BMW\u0026#34;]; var person = {firstName:\u0026#34;John\u0026#34;, lastName:\u0026#34;Doe\u0026#34;}; Declaration # JavaScript has three kinds of variable declarations.\nvar declares a function-scoped or globally-scoped variable, optionally initializing it to a value. let declares a block-scoped local variable, optionally initializing it to a value. const creates block-scoped constants, much like variables declared using the let keyword. The value of a constant can\u0026rsquo;t be changed through reassignment and redeclared. (The detailed differences will be introduced in the follow chapter.) var x = 1; let y = \u0026#39;hello\u0026#39;; const z = [1, \u0026#39;hello\u0026#39;]; Operator # Javascript use Arithmetic Operators (+ - * /) and Assigning Operators (=) same like math method.\nvar x == (x + y) * 10; Javascript also have Bitwise Operator, Condition Operator, Comparison Operator and Logical Operator, which will be introduced in the follow chapter.\nSyntax # Javascript use ; to separate different statement.\nx = 5 + 6; y = x * 10; Function # Javascript use keyword \u0026ldquo;function\u0026rdquo; to define a function.\nfunction myFunction(a, b) { return a * b; } Keyword # Javascript keep a lot of keywords for build-in functions, which can not be used as custom element.\nabstract else instanceof super boolean enum int switch break export interface synchronized byte extends let this case false long throw catch final native throws char finally new transient class float null true const for package try continue function private typeof debugger goto protected var default if public void delete implements return volatile do import short while double in static with Comments # Javascript use double slash (// ) as the single line comments mark, and use (/* */) as the multiple lines comments mark.\n// this is the single line comments, which will not be considered as codes. /* this is the multiple lines comments mark */ Coding # JavaScript is Case-sensitive and uses the Unicode character set, which means it can supports such like:\nconst Früh = \u0026#34;foobar\u0026#34;; Variable # Variable is a container for mutable values or expressions.\nNaming rule # The name of variable observed follow rules:\nSupport number, alphabet, $, and _. Must start with alphabet or $ or _. Support Unicode character set. Case-sensitive. var x = 5; var y = 6; var z = x * y; var $name = \u0026#34;Kiona\u0026#34;; var Früh = \u0026#34;foobar\u0026#34;; Declarations # JavaScript has three kinds of variable declarations， and you don\u0026rsquo;t have to explicitly specify data type. But you still can use new to specify data type manually.\nvar name = new String; var x = new Number; var declares a function-scoped or globally-scoped variable, optionally initializing it to a value. var x = 1; if (x === 1) { var x = 2; // if use \u0026#39;let\u0026#39; the second output is 1 console.log(x); // expected output: 2 } console.log(x); // expected output: 2 let declares a block-scoped local variable, optionally initializing it to a value. let x = 1; if (x === 1) { let x = 2; /* if use var, it will result clash because of * existing global \u0026#39;x\u0026#39; and local \u0026#39;x\u0026#39; */ console.log(x); // expected output: 2 } console.log(x); // expected output: 1 const creates block-scoped constants, much like variables declared using the let keyword. The value of a constant can\u0026rsquo;t be changed through reassignment (i.e. by using the assignment operator), and it can\u0026rsquo;t be redeclared (i.e. through a variable declaration). However, if a constant is an object or array its properties or items can be updated or removed. const number = 42; try { number = 99; // if add \u0026#39;const\u0026#39;, it can be accepted and value is 99 } catch (err) { console.log(err); // expected output: TypeError: invalid assignment to const `number\u0026#39; // (Note: the exact output may be browser-dependent) } console.log(number); // expected output: 42 You can declare variables to unpack values using the destructuring assignment syntax. For example:\nconst { bar } = foo This will create a variable named bar and assign to it the value corresponding to the key of the same name from our object foo.\nVariables should always be declared before they are used. JavaScript used to allow assigning to undeclared variables, which creates an undeclared global variable. This is an error in strict mode and should be avoided altogether.\nInitialization # In var and let declarations, the initializer is optional. If a variable is declared without an initializer, it is assigned the value undefined.\nlet x; console.log(x); // logs \u0026#34;undefined\u0026#34; const declarations always need an initializer, because they forbid any kind of assignment after declaration, and implicitly initializing it with undefined is likely a programmer mistake.\nconst x; // SyntaxError: Missing initializer in const declaration Variable Scope # A variable may belong to one of the following scopes:\nGlobal scope: The default scope for all code running in script mode. Module scope: The scope for code running in module mode. Function scope: The scope created with a function. In addition, variables declared with let or const can belong to an additional scope:\nBlock scope: The scope created with a pair of curly braces ({}). Variable Hoisting # var declared variables are hoisted, meaning you can refer to the variable anywhere in its scope, even if its declaration isn\u0026rsquo;t reached yet. You can see var declarations as being \u0026ldquo;lifted\u0026rdquo; to the top of its function or global scope. However, if you access a variable before it\u0026rsquo;s declared, the value is always undefined, because only its declaration is hoisted, but not its initialization.\nconsole.log(x === undefined); // true var x = 3; (function() { console.log(x); // undefined var x = \u0026#39;local value\u0026#39;; })(); The above examples will be interpreted the same as:\nvar x; console.log(x === undefined); // true x = 3; (function() { var x; console.log(x); // undefined x = \u0026#39;local value\u0026#39;; })(); Notice if remove the sceond var in the first example, it will be:\nconsole.log(x === undefined); // true var x = 3; (function() { console.log(x); // 3 // because no new decalaration to be hoisted x = \u0026#39;local value\u0026#39;; })(); Because of hoisting, all var statements in a function should be placed as near to the top of the function as possible. This best practice increases the clarity of the code.\nBecause the variable is in a \u0026ldquo;temporal dead zone\u0026rdquo; from the start of the block until the declaration is processed, same situation for let and const will cause ReferenceError.\nconsole.log(x); // ReferenceError const x = 3; console.log(y); // ReferenceError let y = 3; Unlike var declarations, which only hoist the declaration but not its value, function declarations are hoisted entirely — you can safely call the function anywhere in its scope.\nUndeclared Variables # If you try to use a variable without declaration under Nonstrict-model, this value will belong to \u0026ldquo;window\u0026quot;\u0026rsquo;s a property to be accessed.\nvar var1 = 1; // unable to change var2 = 2; // belong to \u0026#39;window\u0026#39; can be changed console.log(this.var1); // 1 console.log(window.var1); // 1 console.log(window.var2); // 2 delete var1; // false can not be deleted console.log(var1); // 1 delete var2; console.log(delete var2); // true console.log(var2); // deleted, error: undefined Constants # You cannot declare a constant with the same name as a function or variable in the same scope. For example:\n// THIS WILL CAUSE AN ERROR function f() {}; const f = 5; // THIS WILL CAUSE AN ERROR TOO function f() { const g = 5; var g; //statements } However, const only prevents re-assignments, but doesn\u0026rsquo;t prevent mutations. The properties of objects assigned to constants are not protected, so the following statement is executed without problems.\nconst MY_OBJECT = { key: \u0026#39;value\u0026#39; }; MY_OBJECT.key = \u0026#39;otherValue\u0026#39;; Also, the contents of an array are not protected, so the following statement is executed without problems.\nconst MY_ARRAY = [\u0026#39;HTML\u0026#39;,\u0026#39;CSS\u0026#39;]; MY_ARRAY.push(\u0026#39;JAVASCRIPT\u0026#39;); console.log(MY_ARRAY); // [\u0026#39;HTML\u0026#39;, \u0026#39;CSS\u0026#39;, \u0026#39;JAVASCRIPT\u0026#39;]; Data Type # Javascript data type can be divided into two types: Primitive and Object.\nPrimitive Boolean, Null, Undefined, Number, String, Symbol Object Array, Object, Function, Date, Regex Javascript have dynamic types, which means same variable can represent different data type.\nvar x; // Undefined var x = 5; // Number var x = \u0026#34;John\u0026#34;; // String It can use typeof to check the variable data type.\ntypeof \u0026#34;John\u0026#34; // return String typeof 3.14 // return Number typeof false // return Boolean typeof [1,2,3,4] // return Object typeof {name:\u0026#39;John\u0026#39;, age:34} // return Object String # String is used to contain character set. The mark is \u0026quot; \u0026quot; or ' '.\nvar str = \u0026#34;hello world.\u0026#34;; var str = \u0026#39;hello world.\u0026#39;; The \u0026quot; \u0026quot; or ' ' can be nested, as long as they are pairs.\nvar str1 = \u0026#34;He is called \\\u0026#34;Kiona\\\u0026#34;\u0026#34;; var str2 = \u0026#39;He is called \u0026#34;Kiona\u0026#34;\u0026#39;; document.write(str1 + \u0026#34;\u0026lt;br\u0026gt;\u0026#34;) // He is called \u0026#34;Kiona\u0026#34; document.write(str2 + \u0026#34;\u0026lt;br\u0026gt;\u0026#34;) // He is called \u0026#34;Kiona\u0026#34; Number # Javascript have three ways to represent number.\nInteger without decimal point. Decimal with decimal point, which integer part can be omitted. Scientific Notation with exponent (e or E). var x = 1; var y = 3.14; var m = .325; // 0.325 var n = 498e-4; // 0.0498 Boolean # Boolean is a logical variable only support two values: true of false.\nvar flag = true; var mark = false; Array # Array is used to contain a set of values, and the types of these values can be different. Array, in fact, has two different means: Array Object and Array Literal.\nFor Array Object, you can create it by:\nvar arr = new Array(); arr[0] = \u0026#34;Kiona\u0026#34;; arr[1] = 1; arr[2] = true; Or use condensed way:\nvar arr = new Arry(\u0026#34;Kiona\u0026#34;, 1, true); For Array Literal, it is easy to create:\nvar arr = [\u0026#34;Kiona\u0026#34;, 1, true]; Arry will be discussed later for details.\nObject # An Object has its Key and corresponding Value, format is (Key : Value).\nvar person={name:\u0026#34;Kiona\u0026#34;, age:25, sex:male}; There are two ways to access these properties:\nvar name = person.name; var age = person[\u0026#34;age\u0026#34;]; Object will be discussed later for details.\nUndefined and Null # Undefined means the variable has not been assigned value. But Null means the value is null.\nvar x; // x is Undefined x = null; // x is null now Object # For Javascript almost every can be seen as Object. An Object has its Key and corresponding Value, format is (Key : Value). The mainly difference between Variable and Object is Variable only has one value, but Object can have arbitrary properties include their values.\nvar v1 = 163; // Variabel var car = {brand:\u0026#34;Toyota\u0026#34;, price:25e10, color:\u0026#34;red\u0026#34;}; // Object It can be said Object is a container of Variable, but this variable observed format Key : Value called as Property.\nThere are two ways to access Property:\nvar car = {brand:\u0026#34;Toyota\u0026#34;, price:25e10, color:\u0026#34;red\u0026#34;}; var brand = car.brand; var age = car[\u0026#34;age\u0026#34;]; Another difference is Function can be a member for Object as Property. You can use Object.Function() to access it, but if you omit \u0026ldquo;()\u0026rdquo;, it will print the code directly.\nvar obj = { myFunction : function(){ return \u0026#34;Kiona\u0026#34;; } } console.log(obj.myFunction()); // Kiona console.log(obj.myFunction); // function(){ return \u0026#34;Kiona\u0026#34;; } Function # Function is a code block which can be reused anytime. The grammar for defining a function is as follow, the ARGUMENT and return are not necessary, or you can just return without value:\nfunction FUNCTIONNAME(ARGUMENT1, ARGUMENT2,..., ARGUMENTN) { // code return RESULT; } The real values must strictly ordered same as the order of arguments, when call the Function.\nfunction add(x, y){ return x + y; } console.log(add(1, 2)); // 3 Local Variable # The space between double {} of Function called Local Space. When define variable inside local space by var, the life of this variable will end with the end of the function.\nfunction print(){ var str = \u0026#34;hello\u0026#34;; return str; } console.log(str); // error: str is undefined console.log(print()); // hello Global Variable # On the contrary, global space means space outside the function. Global variable can be accessed anytime untill the program end.\nvar str = \u0026#34;hello\u0026#34;; function print(){ console.log(str); } console.log(str); ","date":"12 January 2023","permalink":"/posts/javascript/javascript-basic/","section":"Posts","summary":"\u003cp\u003eThis chapter will introduce the basic concept of Javascript and basic rules include grammar, variable, function and so on.\u003c/p\u003e","title":"Javascript Basic"},{"content":"This chapter discusses what is JavaScript and its basic grammar, variable declarations, data types and literals.\nJavascript # JavaScript is a cross-platform, object-oriented scripting language used to make webpages interactive (e.g., having complex animations, clickable buttons, popup menus, etc.). There are also more advanced server side versions of JavaScript such as Node.js, which allow you to add more functionality to a website than downloading files (such as realtime collaboration between multiple computers). Inside a host environment (for example, a web browser), JavaScript can be connected to the objects of its environment to provide programmatic control over them.\nCoding # JavaScript is case-sensitive and uses the Unicode character set, which means it can supports such like:\nconst Früh = \u0026#34;foobar\u0026#34;; In JavaScript, instructions are called statements and are separated by semicolons (;).\nComments # The syntax of comments is the same as in C++ and in many other languages:\n// a one line comment /* this is a longer, * multi-line comment */ Variables # The names of variables in Javascript called identifiers, usually starts with a letter, underscore (_), or dollar sign ($). Subsequent characters can also be digits (0 – 9). Because JavaScript is case sensitive, letters include the characters A through Z (uppercase) as well as a through z (lowercase). Javascript also support ISO 8859-1 or Unicode letters such as å and ü in identifiers.\nSome examples of legal names are Number_hits, temp99, $credit, and _name.\nDeclarations # JavaScript has three kinds of variable declarations.\nvar declares a function-scoped or globally-scoped variable, optionally initializing it to a value. var x = 1; if (x === 1) { var x = 2; // if use \u0026#39;let\u0026#39; the second output is 1 console.log(x); // expected output: 2 } console.log(x); // expected output: 2 let declares a block-scoped local variable, optionally initializing it to a value. let x = 1; if (x === 1) { let x = 2; /* if use var, it will result clash because of * existing global \u0026#39;x\u0026#39; and local \u0026#39;x\u0026#39; */ console.log(x); // expected output: 2 } console.log(x); // expected output: 1 const creates block-scoped constants, much like variables declared using the let keyword. The value of a constant can\u0026rsquo;t be changed through reassignment (i.e. by using the assignment operator), and it can\u0026rsquo;t be redeclared (i.e. through a variable declaration). However, if a constant is an object or array its properties or items can be updated or removed. const number = 42; try { number = 99; // if add \u0026#39;const\u0026#39;, it can be accepted and value is 99 } catch (err) { console.log(err); // expected output: TypeError: invalid assignment to const `number\u0026#39; // (Note: the exact output may be browser-dependent) } console.log(number); // expected output: 42 You can declare variables to unpack values using the destructuring assignment syntax. For example:\nconst { bar } = foo This will create a variable named bar and assign to it the value corresponding to the key of the same name from our object foo.\nVariables should always be declared before they are used. JavaScript used to allow assigning to undeclared variables, which creates an undeclared global variable. This is an error in strict mode and should be avoided altogether.\nInitialization # In var and let declarations, the initializer is optional. If a variable is declared without an initializer, it is assigned the value undefined.\nlet x; console.log(x); // logs \u0026#34;undefined\u0026#34; const declarations always need an initializer, because they forbid any kind of assignment after declaration, and implicitly initializing it with undefined is likely a programmer mistake.\nconst x; // SyntaxError: Missing initializer in const declaration Variable scope # A variable may belong to one of the following scopes:\nGlobal scope: The default scope for all code running in script mode. Module scope: The scope for code running in module mode. Function scope: The scope created with a function. In addition, variables declared with let or const can belong to an additional scope:\nBlock scope: The scope created with a pair of curly braces ({}). Variable hoisting # var declared variables are hoisted, meaning you can refer to the variable anywhere in its scope, even if its declaration isn\u0026rsquo;t reached yet. You can see var declarations as being \u0026ldquo;lifted\u0026rdquo; to the top of its function or global scope. However, if you access a variable before it\u0026rsquo;s declared, the value is always undefined, because only its declaration is hoisted, but not its initialization.\nconsole.log(x === undefined); // true var x = 3; (function() { console.log(x); // undefined var x = \u0026#39;local value\u0026#39;; })(); The above examples will be interpreted the same as:\nvar x; console.log(x === undefined); // true x = 3; (function() { var x; console.log(x); // undefined x = \u0026#39;local value\u0026#39;; })(); Notice if remove the sceond var in the first example, it will be:\nconsole.log(x === undefined); // true var x = 3; (function() { console.log(x); // 3 // because no new decalaration to be hoisted x = \u0026#39;local value\u0026#39;; })(); Because of hoisting, all var statements in a function should be placed as near to the top of the function as possible. This best practice increases the clarity of the code.\nBecause the variable is in a \u0026ldquo;temporal dead zone\u0026rdquo; from the start of the block until the declaration is processed, same situation for let and const will cause ReferenceError.\nconsole.log(x); // ReferenceError const x = 3; console.log(y); // ReferenceError let y = 3; Unlike var declarations, which only hoist the declaration but not its value, function declarations are hoisted entirely — you can safely call the function anywhere in its scope.\nGlobal variables # Global variables are in fact properties of the global object.\nIn web pages, the global object is window, so you can set and access global variables using the window.variable syntax. In all environments, you can use the globalThis variable (which itself is a global variable) to access global variables.\nConsequently, you can access global variables declared in one window or frame from another window or frame by specifying the window or frame name.\nConstants # You cannot declare a constant with the same name as a function or variable in the same scope. For example:\n// THIS WILL CAUSE AN ERROR function f() {}; const f = 5; // THIS WILL CAUSE AN ERROR TOO function f() { const g = 5; var g; //statements } However, const only prevents re-assignments, but doesn\u0026rsquo;t prevent mutations. The properties of objects assigned to constants are not protected, so the following statement is executed without problems.\nconst MY_OBJECT = { key: \u0026#39;value\u0026#39; }; MY_OBJECT.key = \u0026#39;otherValue\u0026#39;; Also, the contents of an array are not protected, so the following statement is executed without problems.\nconst MY_ARRAY = [\u0026#39;HTML\u0026#39;,\u0026#39;CSS\u0026#39;]; MY_ARRAY.push(\u0026#39;JAVASCRIPT\u0026#39;); console.log(MY_ARRAY); // [\u0026#39;HTML\u0026#39;, \u0026#39;CSS\u0026#39;, \u0026#39;JAVASCRIPT\u0026#39;]; Data types # The latest ECMAScript standard defines eight data types:\nSeven data types that are primitives:\nBoolean. true and false. null. A special keyword denoting a null value. (Because JavaScript is case-sensitive, null is not the same as Null, NULL, or any other variant.) undefined. A top-level property whose value is not defined. Number. An integer or floating point number. For example: 42 or 3.14159. BigInt. An integer with arbitrary precision. For example: 9007199254740992n. String. A sequence of characters that represent a text value. For example: \u0026ldquo;Howdy\u0026rdquo;. Symbol. A data type whose instances are unique and immutable. and Object\nData type conversion # JavaScript is a dynamically typed language:\nlet answer = 42; And later, you could assign the same variable a string value, for example:\nanswer = \u0026#39;Thanks for all the fish!\u0026#39;; Numbers and the \u0026lsquo;+\u0026rsquo; operator # In expressions involving numeric and string values with the + operator, JavaScript converts numeric values to strings. For example:\nx = \u0026#39;The answer is \u0026#39; + 42 // \u0026#34;The answer is 42\u0026#34; y = 42 + \u0026#39; is the answer\u0026#39; // \u0026#34;42 is the answer\u0026#34; z = \u0026#39;37\u0026#39; + 7 // \u0026#34;377\u0026#34; With all other operators, JavaScript does not convert numeric values to strings. For example:\n\u0026#39;37\u0026#39; - 7 // 30 \u0026#39;37\u0026#39; * 7 // 259 Converting strings to numbers # In the case that a value representing a number is in memory as a string, there are methods for conversion.\nparseInt() parses a string argument and returns an integer of the specified radix. parseFloat() parses a string argument and returns a floating point number. parseInt(\u0026#39;101\u0026#39;, 2) // 5 An alternative method of retrieving a number from a string is with the + (unary plus) operator:\n\u0026#39;1.1\u0026#39; + \u0026#39;1.1\u0026#39; // \u0026#39;1.11.1\u0026#39; (+\u0026#39;1.1\u0026#39;) + (+\u0026#39;1.1\u0026#39;) // 2.2 // Note: the parentheses are added for clarity, not required. Array # The Array object, as with arrays in other programming languages, enables storing a collection of multiple items under a single variable name, and has members for performing common array operations.\nJavaScript arrays are resizable and can contain a mix of different data types. (When those characteristics are undesirable, use typed arrays instead.) JavaScript arrays are not associative arrays and so, array elements cannot be accessed using arbitrary strings as indexes, but must be accessed using nonnegative integers (or their respective string form, e.g., num[1] or num['1']) as indexes. JavaScript arrays are zero-indexed: the first element of an array is at index 0, the second is at index 1, and so on and the last element is at the value of the array\u0026rsquo;s length property minus 1. JavaScript array-copy operations create shallow copies. (All standard built-in copy operations with any JavaScript objects create shallow copies, rather than deep copies). Literals # Literals represent values in JavaScript. These are fixed values (not variables) that you literally provide in your script. This section describes the following types of literals:\nArray literals Boolean literals Numeric literals Object literals RegExp literals String literals Array literals # An array literal is a list of zero or more expressions, each of which represents an array element, enclosed in square brackets ([]). When you create an array using an array literal, it is initialized with the specified values as its elements, and its length is set to the number of arguments specified.\nconst coffees = [\u0026#39;French Roast\u0026#39;, \u0026#39;Colombian\u0026#39;, \u0026#39;Kona\u0026#39;]; // length is 3 Extra commas in array literals # If you put two commas in a row in an array literal, the array leaves an empty slot for the unspecified element.\nconst fish = [\u0026#39;Lion\u0026#39;, , \u0026#39;Angel\u0026#39;]; console.log(fish); // [ \u0026#39;Lion\u0026#39;, \u0026lt;1 empty item\u0026gt;, \u0026#39;Angel\u0026#39; ] Index-accessing fish[1] returns undefined, but which is not exactly the same as the actual undefined value.\nIn the following example, the length of the array is three. There is no myList[3].\nconst myList = [\u0026#39;home\u0026#39;, , \u0026#39;school\u0026#39;, ]; In the following example, the length of the array is four, and myList[0] and myList[2] are missing.\nconst myList = [, \u0026#39;home\u0026#39;, , \u0026#39;school\u0026#39;]; In the following example, the length of the array is four, and myList[1] and myList[3] are missing. Only the last comma is ignored.\nconst myList = [\u0026#39;home\u0026#39;, , \u0026#39;school\u0026#39;, , ]; However, when writing your own code, you should explicitly declare the missing elements as undefined, or at least insert a comment to highlight its absence.\nconst myList = [\u0026#39;home\u0026#39;, /* empty */, \u0026#39;school\u0026#39;, /* empty */, ]; Boolean literals # Do not confuse the Boolean primitive values true and false with the true and false values of the Boolean object.\nAny object, including a Boolean object whose value is false, evaluates to true when passed to a conditional statement. For example, the condition in the following if statement evaluates to true:\nconst x = new Boolean(false); if (x) { // this code is executed } This behavior does not apply to Boolean primitive. For example, the condition in the following if statement evaluates to false:\nconst x = false; if (x) { // this code is not executed } Do not use the Boolean() constructor with new to convert a non-boolean value to a boolean value. Use Boolean as a function or a double NOT (!!) instead:\nconst good = Boolean(expression); // use this const good2 = !!(expression); // or this const bad = new Boolean(expression); // don\u0026#39;t use this! If you specify any object, including a Boolean object whose value is false, as the initial value of a Boolean object, the new Boolean object has a value of true.\nconst myFalse = new Boolean(false); // initial value of false const g = Boolean(myFalse); // initial value of true const myString = new String(\u0026#39;Hello\u0026#39;); // string object const s = Boolean(myString); // initial value of true Numeric literals # JavaScript numeric literals include integer literals in different bases as well as floating-point literals in base-10.\nNote that the language specification requires numeric literals to be unsigned. Nevertheless, code fragments like -123.4 are fine, being interpreted as a unary - operator applied to the numeric literal 123.4.\nInteger literals # Integer and BigInt literals can be written in decimal (base 10), hexadecimal (base 16), octal (base 8) and binary (base 2).\nA decimal integer literal is a sequence of digits without a leading 0 (zero). A leading 0 (zero) on an integer literal, or a leading 0o (or 0O) indicates it is in octal. Octal integer literals can include only the digits 0 – 7. A leading 0x (or 0X) indicates a hexadecimal integer literal. Hexadecimal integers can include digits (0 – 9) and the letters a – f and A – F. (The case of a character does not change its value. Therefore: 0xa = 0xA = 10 and 0xf = 0xF = 15.) A leading 0b (or 0B) indicates a binary integer literal. Binary integer literals can only include the digits 0 and 1. A trailing n suffix on an integer literal indicates a BigInt literal. The integer literal can use any of the above bases. Note that leading-zero octal syntax like 0123n is not allowed, but 0o123n is fine. Some examples of integer literals are:\n0, 117, 123456789123456789n // decimal, base 10 015, 0001, 0o777777777777n // octal, base 8 0x1123, 0x00111, 0x123456789ABCDEFn // hexadecimal, \u0026#34;hex\u0026#34; or base 16 0b11, 0b0011, 0b11101001010101010101n // binary, base 2 Floating-point literals # Succinctly, the syntax is:\n[digits].[digits][(E|e)[(+|-)]digits] For example:\n3.1415926 .123456789 3.1E+12 .1e-23 Object literals # An object literal is a list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ({}).\nUse (.) to access string property name. Use ([]) to access numeric property name. Use ([]) to access unvalid identifier property name. For example the car object:\n// e.g. 1 const sales = \u0026#39;Toyota\u0026#39;; function carTypes(name) { return name === \u0026#39;Honda\u0026#39; ? name : `Sorry, we don\u0026#39;t sell ${name}.`; } const car = { myCar: \u0026#39;Saturn\u0026#39;, getCar: carTypes(\u0026#39;Honda\u0026#39;), special: sales }; console.log(car.myCar); // Saturn console.log(car.getCar); // Honda console.log(car.special); // Toyota // e.g. 2 const car = { manyCars: { a: \u0026#39;Saab\u0026#39;, b: \u0026#39;Jeep\u0026#39; }, 7: \u0026#39;Mazda\u0026#39; }; console.log(car.manyCars.b); // Jeep console.log(car[7]); // Mazda // e.g. 3 const unusualPropertyNames = { \u0026#39;\u0026#39;: \u0026#39;An empty string\u0026#39;, \u0026#39;!\u0026#39;: \u0026#39;Bang!\u0026#39; } console.log(unusualPropertyNames[\u0026#39;\u0026#39;]); // An empty string console.log(unusualPropertyNames[\u0026#39;!\u0026#39;]); // Bang! Enhanced Object literals # Object literals support a range of shorthand syntaxes that include setting the prototype at construction, shorthand for foo: foo assignments, defining methods, making super calls, and computing property names with expressions.\nconst obj = { // __proto__ __proto__: theProtoObj, // Shorthand for \u0026#39;handler: handler\u0026#39; handler, // Methods toString() { // Super calls return \u0026#39;d \u0026#39; + super.toString(); }, // Computed (dynamic) property names [\u0026#39;prop_\u0026#39; + (() =\u0026gt; 42)()]: 42, } RegExp literals # A regex literal is a pattern enclosed between slashes (/).\nconst re = /ab+c/; String literals # A string literal is zero or more characters enclosed in double (\u0026quot;) or single (') quotation marks.\n\u0026#39;foo\u0026#39; \u0026#34;bar\u0026#34; \u0026#39;1234\u0026#39; \u0026#39;one line \\n another line\u0026#39; \u0026#34;Joyo\u0026#39;s cat\u0026#34; You should use string literals unless you specifically need to use a String object. See String for details on String objects.\nYou can call any of the String object\u0026rsquo;s methods on a string literal value. JavaScript automatically converts the string literal to a temporary String object, calls the method, then discards the temporary String object.\n// Will print the number of symbols in the string including whitespace. console.log(\u0026#34;Joyo\u0026#39;s cat\u0026#34;.length) // In this case, 10. Template literals # Template literals are enclosed by the back-tick ( `).\n// Basic literal string creation `In JavaScript \u0026#39;\\n\u0026#39; is a line-feed.` // Multiline strings `In JavaScript, template strings can run over multiple lines, but double and single quoted strings cannot.` // String interpolation const name = \u0026#39;Lev\u0026#39;, time = \u0026#39;today\u0026#39;; `Hello ${name}, how are you ${time}?` Tagged templates # Tagged templates are a compact syntax for specifying a template literal along with a call to a tag function for parsing it. A tagged template is just a more succinct and semantic way to invoke a function that processes a string and a set of relevant values. The name of the template tag function precedes the template literal — as in the following example, where the template tag function is named print. The print function will interpolate the arguments and serialize any objects or arrays that may come up, avoiding the pesky [object Object].\nconst formatArg = (arg) =\u0026gt; { if (Array.isArray(arg)) { // Print a bulleted list return arg.map((part) =\u0026gt; `- ${part}`).join(\u0026#34;\\n\u0026#34;); } if (arg.toString === Object.prototype.toString) { // This object will be serialized to \u0026#34;[object Object]\u0026#34;. // Let\u0026#39;s print something nicer. return JSON.stringify(arg); } return arg; } const print = (segments, ...args) =\u0026gt; { // For any well-formed template literal, there will always be N args and // (N+1) string segments. let message = segments[0]; segments.slice(1).forEach((segment, index) =\u0026gt; { message += formatArg(args[index]) + segment; }); console.log(message); } const todos = [ \u0026#34;Learn JavaScript\u0026#34;, \u0026#34;Learn Web APIs\u0026#34;, \u0026#34;Set up my website\u0026#34;, \u0026#34;Profit!\u0026#34;, ]; const progress = { javascript: 20, html: 50, css: 10 }; print`I need to do: ${todos} My current progress is: ${progress} `; // I need to do: // - Learn JavaScript // - Learn Web APIs // - Set up my website // - Profit! // My current progress is: {\u0026#34;javascript\u0026#34;:20,\u0026#34;html\u0026#34;:50,\u0026#34;css\u0026#34;:10} Since tagged template literals are just sugar of function calls, you can re-write the above as an equivalent function call:\nprint([\u0026#34;I need to do:\\n\u0026#34;, \u0026#34;\\nMy current progress is: \u0026#34;, \u0026#34;\\n\u0026#34;], todos, progress); This may be reminiscent of the console.log-style interpolation:\nconsole.log(\u0026#34;I need to do:\\n%o\\nMy current progress is: %o\\n\u0026#34;, todos, progress); Tagged template reads more naturally than a traditional \u0026ldquo;formatter\u0026rdquo; function, where the variables and the template itself have to be declared separately.\nEscape character # Character Meaning \\0 Null Byte \\b Backspace \\f Form Feed \\n New Line \\r Carriage Return \\t Tab \\v Vertical tab \\' Apostrophe or single quote \\\u0026quot; Double quote \\\\ Backslash character \\XXX The character with the Latin-1 encoding specified by up to three octal digits XXX between 0 and 377. For example, \\251 is the octal sequence for the copyright symbol. \\xXX The character with the Latin-1 encoding specified by the two hexadecimal digits XX between 00 and FF. For example, \\xA9 is the hexadecimal sequence for the copyright symbol. \\uXXXX The Unicode character specified by the four hexadecimal digits XXXX. For example, \\u00A9 is the Unicode sequence for the copyright symbol. \\u{XXXXX} Unicode code point escapes. For example, \\u{2F804} is the same as the simple Unicode escapes \\uD87E\\uDC04. const quote = \u0026#34;\\\\ He read \\\u0026#34;The Cremation of Sam McGee\\\u0026#34; by R.W. Service. \\\\\u0026#34;; console.log(quote); // \\ He read \u0026#34;The Cremation of Sam McGee\u0026#34; by R.W. Service. \\ You can also escape line breaks by preceding them with backslash. The backslash and line break are both removed from the value of the string.\nconst str = \u0026#39;this string \\ is broken \\ across multiple \\ lines.\u0026#39; console.log(str); // this string is broken across multiple lines. ","date":"9 January 2023","permalink":"/posts/javascript/javascript-basics-1/","section":"Posts","summary":"\u003cp\u003eThis chapter discusses what is JavaScript and its basic grammar, variable declarations, data types and literals.\u003c/p\u003e","title":"Javascript Basics 1"},{"content":"","date":"9 January 2023","permalink":"/tags/node.js/","section":"Tags","summary":"","title":"Node.js"},{"content":"This chapter will introduce the basic concept of Node.js and preparation for using Node.js.\nNode.js # Node.js is an open-source and cross-platform JavaScript runtime environment. Node.js runs the V8 JavaScript engine, the core of Google Chrome, outside of the browser. This allows Node.js to be very performant. Node.js can process every operation asynchronous in one single process, by a set of asynchronous I/O primitives privided in its standard library. Instead of creating a new thread, it\u0026rsquo;s easy to control. Node.js default use asynchronous functions, but also support synchronous functions which needed to be stated. Install Node.js # For Windows # It\u0026rsquo;s easy for installation of Node.js for Windows. Just download the proper installation package of Node.js from the Offical Link and install it.\nIt should be noticed that some useful modules can be installed automatically by Node.js. Just select \u0026lsquo;Automatically install the necessary tools.\u0026rsquo; when you install Node.js if you need these modules.\nAnd you can also install Node.js through Chocolatety (windows package management tool like apt in Linux), just run:\nchoco install Node.js By this way, it will not install additional modules automatically.\nFor Linux (e.g. Ubuntu) # You can also install Node.js by download the package from Offical Link, but it\u0026rsquo;s highly recommended installing by Linux Package Management tool e.g. apt.\nsudo install Node.js It should be noticed that compare with downloading installation package, some basic modules such as npm won\u0026rsquo;t be included automatically by this way. So you need to manually install them like:\nsudo apt install npm ","date":"9 January 2023","permalink":"/posts/nodejs/starting-nodejs/","section":"Posts","summary":"\u003cp\u003eThis chapter will introduce the basic concept of Node.js and preparation for using Node.js.\u003c/p\u003e","title":"Starting Node.js"},{"content":"","date":"29 December 2022","permalink":"/categories/math/","section":"Categories","summary":"","title":"Math"},{"content":"","date":"29 December 2022","permalink":"/tags/petsc/","section":"Tags","summary":"","title":"PETSc"},{"content":"This article is the Usage for the two follow github projects about the use of PETSc lib.\nhttps://github.com/topopt/TopOpt_in_PETSc https://github.com/thsmit/TopOpt_in_PETSc_wrapped_in_Python The first project will be called TopOpt and the second is TopOptpy in the next part.\nInstallation of TopOpt # Installation # To clone the TopOpt:\ngit clone https://github.com/topopt/TopOpt_in_PETSc.git The main requirements are:\nLinux (tested in Ubuntu-22.04.1) PETSc (tested in 3.14.1 version) Check how to install PETSc in an other article\nAfter downloading the project, you will the file named makefile_ref in the root directory. The content of it is:\nPETSC_DIR=xxxxxx PETSC_ARCH=xxxxxx CFLAGS = -I. FFLAGS= CPPFLAGS=-I. FPPFLAGS= LOCDIR= EXAMPLESC= EXAMPLESF= MANSEC= CLEANFILES= NP= include ${PETSC_DIR}/lib/petsc/conf/variables include ${PETSC_DIR}/lib/petsc/conf/rules include ${PETSC_DIR}/lib/petsc/conf/test topopt: main.o TopOpt.o LinearElasticity.o MMA.o Filter.o PDEFilter.o MPIIO.o chkopts rm -rf topopt -${CLINKER} -o topopt main.o TopOpt.o LinearElasticity.o MMA.o Filter.o PDEFilter.o MPIIO.o ${PETSC_SYS_LIB} ${RM} main.o TopOpt.o LinearElasticity.o MMA.o Filter.o PDEFilter.o MPIIO.o rm -rf *.o myclean: rm -rf topopt *.o output* binary* log* makevtu.pyc Restart* Change the PETSC_DIR and PETSC_ARCH to your path (It can be found in the PETSc\u0026rsquo;s configure.log). And then, change the makefile_ref name to makefile, so you can make the project after that:\nmake check all Running # After making, you can do the following:\nNormal compilation time of framework, e.g. 4s: make topopt -j. Run the base example to generate bitwise file (.bat) by typing e.g.: mpirun -np 4 ./topopt. Postprocess results using Python 2.6 for visualization (.vtu): bin2vtu # where # refers to the iteration number If haven\u0026rsquo;t Python2.6, using sudo apt install python2 to install.\nThe result (default name output_xxxxx.vtu) can be visualized through Paraview, which can be installed by: sudo apt install paraview or download from https://www.paraview.org/. Running Paraview, open the output_xxxxx.vtu (File-\u0026gt;Open), turn on the eye button, and select one shader.\nInstallation of TopOptpy # o clone the TopOpt:\ngit clone https://github.com/thsmit/TopOpt_in_PETSc_wrapped_in_Python.git The main requirements are:\nLinux (tested in Ubuntu-22.04.1) PETSc (tested in 3.14.1 version) Python3 (tested in 3.10.6 version) One of the differents between TopOpt and TopOptpy is TopOptpy is managed by cmake. So before building, it need to install cmake by:\nsudo apt install cmake Then, set the PETSC_DIR and PETSC_ARCH path by:\nexport PETSC_ARCH=arch-linux-c-opt export PETSC_DIR=/home/ts/Documents/petsc And creat the build folder:\nmkdir build \u0026amp;\u0026amp; cd build At last, it can be maked:\ncmake .. -D PETSC_EXECUTABLE_RUNS=ON make -j $(nproc) When making the project, might meeting the error likes:\nCannot compile.link C with mpicc: /usr/bin/ld: cannot find -lmpi_cxx It means lack of depended libs. You need to use apt to install them for example:\nsudo apt search lmpi ... sudo apt install libmkl-blacs-intelmpi-ilp64 #Choose the applicable version Running # Running \u0026lsquo;hello world\u0026rsquo; example # Running a \u0026lsquo;hello world\u0026rsquo; example from the command line. Generates standard cantilever beam and output .vtr files for viewing in Paraview.\nimport topoptlib data = topoptlib.Data() data.solve() The output files are named TopOpt_xxx.vtr, which can be read as a group by Paraview same like TopOpt.\nRunning examples # To run the cantilever beam example on one CPU (adjust the problem\u0026rsquo;s mesh according to the number of available CPU\u0026rsquo;s):\ncd TopOpt_in_PETSc_wrapped_in_Python cp examples/beam.py . python3 beam.py Available examples:\nCantilever beam in beam.py Multi-loads in multiloads.py Torsion ball in sphere.py The Jet engine bracket in bracket.py Running on ETH Euler (without installing PETSc) # env2lmod module load gcc/4.8.5 cmake/3.16.5 openmpi/3.0.1 petsc/3.10.5 python/3.7.4 cd TopOpt_in_PETSc_wrapped_in_Python mkdir build cd build cmake .. make cd .. bsub -n 8 mpirun -n 8 python3 bracket.py Or use run_topopt.sh for automated building and running.\nRunning tests # Several tests are provided to verify the proper working of the framework. To run a test using 4 CPU\u0026rsquo;s use:\ncd TopOpt_in_PETSc_wrapped_in_Python cp topoptlib/test/test_beam.py . mpirun -n 4 python3 test_beam.py Implemented tests in /tests:\nTesting standard MBB problem with maxItr of 40 test_beam.py Testing the standard MBB problem with two line loads test_multiload.py Testing continuation of penalization test_continuation.py Testing heavyside projection filtering test_projection.py Testing stl readin of design domain, rigid domain test_sphere.py Testing stl readin of design domain, rigid domain test_bracket.py Testing the robust approach test_michell.py Or use test_topopt.sh for automated building and running the tests. Post-processing (easy) # The framework can write .vtr files of the designs with in point data. The designs can be viewed in Paraview. The point data can be transformed into cell data by using Paraview\u0026rsquo;s PointToCellData filter. To generate .vtr files add the following command to the problem definition:\nvtr(20) Post-processing (original) # After solving the problem the output is written to a output.dat file. The designs can be viewed in Paraview. To generate .vtu files from the output file use post_process_topopt.sh with Python 2 (with * the file path and name where the output file is stored):\ncd TopOpt_in_PETSc_wrapped_in_Python ./post_process_topopt.sh * ","date":"29 December 2022","permalink":"/posts/petsc/topopt-in-petsc/","section":"Posts","summary":"\u003cp\u003eThis article is the Usage for the two follow github projects about the use of PETSc lib.\u003c/p\u003e","title":"Usage of TopOpt-in-PETSc Projects"},{"content":"This article will cover the installation of the PETSc library, including the common installation for Linux and the attempt on Windows.\nPart of this article is encrypted with password:\n--- DON'T MODIFY THIS LINE ---\rInstallation for Linux # This article is applicable to the building of PETSc-3.14.1. You can download the newest version by:\ngit clone -b release https://gitlab.com/petsc/petsc.git #If haven\u0026#39;t the git tool, you can install it through \u0026#39;apt\u0026#39;. #Follow steps will show how to use \u0026#39;apt\u0026#39;. or search the applicable version through the link:\nhttps://gitlab.com/petsc/petsc\nEnvironment # Building PETSc relies on the following environments：\nUbuntu (Linux system, tested in 22.04.1 version) gcc/g++/gfrotran (C/C++/Frotran compiler, tested in 11.3.0 version) Python3 (tested in 3.10.6) LAPACK/BLAS (Scientific computing library, tested in 3,4,2 version) MPICH (Realization of MPI, tested in 4.0.2 version) Installation # The first step is installing Ubuntu system, you can install it on your PC or virtual machine (e.g.VMware).\nPlease choose English as the system language if you can accpet, which is convenient for programming. You can choose the minimal installation and don\u0026rsquo;t choose any third-part software and updating opeions when installing, if you internet is not good enough. After Ubuntu installation, the first thing you need to do is updating software. Ubuntu uses apt gizmo to manage software, the updating command:\n# Using \u0026#39;apt-get\u0026#39; to instead \u0026#39;apt\u0026#39;, If your system doesn\u0026#39;t support \u0026#39;apt\u0026#39; sudo apt update # update \u0026#39;apt\u0026#39; itself sudo apt upgrade # update software If the origin software mirror source is too late, you can change it by:\ncp /etc/apt/sources.list /etc/apt/sources.list.bak # Copy old version sudo vi /etc/apt/sources.list deb http://mirrors.aliyun.com/ubuntu/ xxxx main restricted universe multiverse # Change all the link, notice keep \u0026#39;xxxx\u0026#39; with your own Codename Some recommended sources are follows:\n# Aliyun deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse # Tsinghua deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse The next step is installing gcc/g++/gfrotran and Python3, you can directly install them with apt:\nsudo apt install gcc sudo apt install g++ sudo apt install gfortran sudo apt install python3 If can\u0026rsquo;t find the package, you can use apt search to search it and choose the right version for installing.\nIn some situation, you might meet error: configure: error: no acceptable C compiler found in $PATH, especially choosing minimal version when installing Ubuntu. You can fix it by:sudo apt-get install -y build-essential.\nThere are two different ways about installing LAPACK/BLAS and MPICH. The first is installing during the PETSc configuring, which recommended by PETSc official. The other is using apt.\nFor the first way, cd into the PETSc\u0026rsquo;s root directory and configure with follow command:\n./configure --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --download-mpich --download-fblaslapack If download fails, you can download these packages mannually from the given link in the configure message. Then, indicate the download directory:\n./configure --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --download-mpich --download-fblaslapack --with-download-dir=\u0026lt;xxxxx\u0026gt; After configuration, make the project:\nmake all check If you don\u0026rsquo;t have the make tool, install it by apt.\nThe second way is installing LAPACK/BLAS and MPICH mannually. LAPACK/BLAS are easily to install:\nsudo apt search lapack-dev ... sudo apt install liblapack64-dev #Choose the applicable version sudo apt search blas-dev ... sudo apt install libblas64-dev #Choose the applicable version MPI is a cross-language communication protocol for parallel programming. MPICH is one of realizations of MPI, and you can also choose OpenMPI to instead it:\nsudo apt install mpich #sudo apt install openmpi After that, if the $PATH is correct you can configure PETSc directly, otherwise you need indicate the directory:\n./configure --with-cc=gcc --with-cxx=g++ --with-fc=gfortran #./configure --with-cc=gcc --with-cxx=g++ --with-fc=gfortran --with--mpich-dir=\u0026lt;xxxx\u0026gt; --with--fblaslapack-dir=\u0026lt;xxxx\u0026gt; After configuration, make the project:\nmake all check During the making process, some errors might occur such as /usr/bin/ld: cannot find -lmpi_cxx, which means lack of depended libs. You need to use apt to install them for example:\nsudo apt search lmpi ... sudo apt install libmkl-blacs-intelmpi-ilp64 #Choose the applicable version After making, the message will show follows. You can re-check this information through configure.log, the PETSC_DIR and PETSC_ARCH will be used in your project.\n----------------------------------------- PETSC_VERSION_RELEASE . . . ----------------------------------------- #define SOME_PETSC_VARIABLE . . . ----------------------------------------- Installed Compiler, Package, and Library Information . . . ========================================= FC arch-darwin-c-debug/obj/sys/f90-mod/petscsysmod.o FC arch-darwin-c-debug/obj/sys/fsrc/somefort.o FC arch-darwin-c-debug/obj/sys/f90-src/fsrc/f90_fwrap.o CC arch-darwin-c-debug/obj/sys/info/verboseinfo.o CC arch-darwin-c-debug/obj/sys/info/ftn-auto/verboseinfof.o CC arch-darwin-c-debug/obj/sys/info/ftn-custom/zverboseinfof.o . . . FC arch-darwin-c-debug/obj/snes/f90-mod/petscsnesmod.o FC arch-darwin-c-debug/obj/ts/f90-mod/petsctsmod.o FC arch-darwin-c-debug/obj/tao/f90-mod/petsctaomod.o CLINKER arch-darwin-c-debug/lib/libpetsc.PETSC_MAJOR.PETSC_MINOR.PETSC_PATCH.dylib DSYMUTIL arch-darwin-c-debug/lib/libpetsc.PETSC_MAJOR.PETSC_MINOR.PETSC_PATCH.dylib gmake[2]: Leaving directory \u0026#39;/your/petsc/dir\u0026#39; gmake[1]: Leaving directory \u0026#39;/your/petsc/dir\u0026#39; ========================================= Running test examples to verify correct installation Using PETSC_DIR=/your/petsc/dir and PETSC_ARCH=your-petsc-arch C/C++ example src/snes/examples/tutorials/ex19 run successfully with 1 MPI process C/C++ example src/snes/examples/tutorials/ex19 run successfully with 2 MPI processes Fortran example src/snes/examples/tutorials/ex5f run successfully with 1 MPI process Completed test examples Installation for Windows # The installation of PETSc for Windows is not successful yet, this is just a record for the works.\nEnvironment # This article try MSYS2 and Cygwin separately to build PETSc：\nMSYS2 (Linux environment in Windows, tested in 20221216.0.0 version) Cygwin (Linux environment in Windows, tested in 1.2.1 version) Test in MSYS2 # The MSYS2 system uses pacman to manage packages such like apt. You need to install all the same packages in Linux to MSYS2 by pacman. MSYS2 doesn\u0026rsquo;t have some base packages (e.g.make), which you also need to install. Usage of pacman:\npacman -Ss [package name] #Search package pacman -S [package name] #Install package The problem is when trying to configure PETSc after installing all the packages, it will meet error:\nCould not execute \u0026#34;[\u0026#39;/bin/rpm -q diffutils\u0026#39;]\u0026#34;: /bin/sh: line 1: /bin/rpm: No such file or directory. The MSYS2 is a simple Linux environment running on Windows, which doesn\u0026rsquo;t support enough to run this command.\nTest in Cygwin # The Cygwin system doesn\u0026rsquo;t have such as pacman or apt tool to manage packages. One of the way to get package is to re-run the Cygwin-setup and to choose the needed package.\nThe other way to get the package is use apt-cyg. apt-cyg is similar to apt, but need be installed mannually:\nlynx -source rawgit.com/transcode-open/apt-cyg/master/apt-cyg \u0026gt; apt-cyg install apt-cyg /bin Or you can copy the apt-cyg\u0026rsquo;s content through https://github.com/transcode-open/apt-cyg to Cygwin:/bin to creat the same file and run:\nchmod +x apt-cyg The first problem except installing the base packages is Cygwin can\u0026rsquo;t install MPICH successfully through above ways. So I try to build it mannualy.\nFirstly, download the source of MPICH from https://www.mpich.org/downloads/ and unpack the tar file (If doesn\u0026rsquo;t have tar or other tools, just install them by Cygwin-setup or apt-cyg):\ntar xfz mpich.tar.gz #If tar doesn’t accept the z option, use #gunzip -c mpich.tar.gz | tar xf - Let us assume that the directory where you do this is /home/you/libraries. It will now contain a subdirectory named mpich-x.x.x. Choose an installation directory (the default is /usr/local/bin):\nmkdir /home/you/mpich-install Choose a build directory:\nmkdir /tmp/you/mpich-x.x.x Configure MPICH, specifying the installation directory, and running the configure script in the source directory:\ncd /tmp/you/mpich-x.x.x /home/you/libraries/mpich-x.x.x/configure -prefix=/home/you/mpich-install |\u0026amp; tee c.txt For the Cygwin\u0026rsquo;s gfortran, it will meet error:\nconfigure: error: The Fortran compiler gfortran does not accept programs that call the same routine with arguments of different types without the option -fallow-argument-mismatch. Rerun configure with FFLAGS=-fallow-argument-mismatch and FCFLAGS=-fallow-argument-mismatch Change the command:\n/home/you/libraries/mpich-x.x.x/configure -prefix=/home/you/mpich-install FFLAGS=-fallow-argument-mismatch FCFLAGS=-fallow-argument-mismatch |\u0026amp; tee c.txt The error change to:\nconfigure: error: libfabric only builds on Linux, OS X, and FreeBSD configure: error: libfabric configure failed It seems Cygwin can not support MPICH yet.\nConclusion # It is not to hard to and possible to change the code to Windows version, because of the similarity between gcc and MSVC。So the best way is to rewrite the full code instead of using virtual Linux environment.\n","date":"28 December 2022","permalink":"/posts/petsc/installation-petsc/","section":"Posts","summary":"\u003cp\u003eThis article will cover the installation of the PETSc library, including the common installation for Linux and the attempt on Windows.\u003c/p\u003e","title":"Installation of PETSc"},{"content":" Parallelism # The Futhark compiler only generates parallel code for explicitly parallel constructs such as map and reduce. A plain loop will not result in parallel code (unless the loop body itself contains parallel operations). The most important parallel constructs are the second-order array combinators (SOACs) such as map and reduce, but functions such as copy are also parallel.\n","date":"1 January 0001","permalink":"/posts/futhark/futhark-note-1/futhark-note-1/","section":"Posts","summary":"Parallelism # The Futhark compiler only generates parallel code for explicitly parallel constructs such as map and reduce.","title":""},{"content":"==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==\nText Elements # Mesh to sdf (Python) ^93XSpAGn\nmesh_to_sdf ^q4XKnPsb\nExtracting SDF of given query points from mesh ^xbZP9w1s\nget_surface_point_cloud ^H99jMCmN\nGet surface points from mesh ^JzjLuTeB\ncreate_from_scans ^jbU2ARXa\nCreate points by scanning ^2AQJF5Q8\nsample_from_mesh ^ACcUJ5RP\nSampling from mesh directly ^28npfw35\nsample ^WoOgEUFM\nUniform sample method ^AbmW7afb\n[[point-sampling-of-triangle-mesh]] ^uDDmQELH\n%%\nDrawing # { \u0026#34;type\u0026#34;: \u0026#34;excalidraw\u0026#34;, \u0026#34;version\u0026#34;: 2, \u0026#34;source\u0026#34;: \u0026#34;https://github.com/zsviczian/obsidian-excalidraw-plugin/releases/tag/1.8.24\u0026#34;, \u0026#34;elements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 105, \u0026#34;versionNonce\u0026#34;: 1304621821, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;WQjgaGIWWRHdo1T0FOzIZ\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -560, \u0026#34;y\u0026#34;: -291.2421875, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#fab005\u0026#34;, \u0026#34;width\u0026#34;: 384, \u0026#34;height\u0026#34;: 35, \u0026#34;seed\u0026#34;: 586221683, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;93XSpAGn\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;5didaevhd9WgOM7DWBsps\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402577389, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 127, \u0026#34;versionNonce\u0026#34;: 462401981, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;93XSpAGn\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -473.2999038696289, \u0026#34;y\u0026#34;: -286.2421875, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 210.5998077392578, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 48650429, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694402564387, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;Mesh to sdf (Python)\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;Mesh to sdf (Python)\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;WQjgaGIWWRHdo1T0FOzIZ\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;Mesh to sdf (Python)\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 202, \u0026#34;versionNonce\u0026#34;: 910560915, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;abK8Gl14tDSgNIcOVp6qH\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -558, \u0026#34;y\u0026#34;: -192.7421875, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#12b886\u0026#34;, \u0026#34;width\u0026#34;: 384, \u0026#34;height\u0026#34;: 35, \u0026#34;seed\u0026#34;: 586221683, \u0026#34;groupIds\u0026#34;: [ \u0026#34;G82bxbVh5yF9EfbmfJIpI\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;q4XKnPsb\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;Wa3eUmcluzlPVQp6D-z1e\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;5didaevhd9WgOM7DWBsps\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;1IlergNMq9i3jqAGjYmZJ\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402588458, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 228, \u0026#34;versionNonce\u0026#34;: 1502376477, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;q4XKnPsb\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -431.8599319458008, \u0026#34;y\u0026#34;: -187.7421875, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 131.71986389160156, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 48650429, \u0026#34;groupIds\u0026#34;: [ \u0026#34;G82bxbVh5yF9EfbmfJIpI\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694402564387, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;mesh_to_sdf\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;mesh_to_sdf\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;abK8Gl14tDSgNIcOVp6qH\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;mesh_to_sdf\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 70, \u0026#34;versionNonce\u0026#34;: 692128307, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;xbZP9w1s\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -111.51254785627066, \u0026#34;y\u0026#34;: -187.49835618070335, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 472.63958740234375, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 1568657309, \u0026#34;groupIds\u0026#34;: [ \u0026#34;G82bxbVh5yF9EfbmfJIpI\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;Wa3eUmcluzlPVQp6D-z1e\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402564388, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;Extracting SDF of given query points from mesh\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;Extracting SDF of given query points from mesh\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;Extracting SDF of given query points from mesh\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 77, \u0026#34;versionNonce\u0026#34;: 426660493, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;Wa3eUmcluzlPVQp6D-z1e\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -117.5864972973394, \u0026#34;y\u0026#34;: -171.3011576711868, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 51.62857024908408, \u0026#34;height\u0026#34;: 2.024649813689564, \u0026#34;seed\u0026#34;: 295589491, \u0026#34;groupIds\u0026#34;: [ \u0026#34;G82bxbVh5yF9EfbmfJIpI\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694403977101, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;xbZP9w1s\u0026#34;, \u0026#34;focus\u0026#34;: -0.7151479865060388, \u0026#34;gap\u0026#34;: 6.0739494410687485 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;abK8Gl14tDSgNIcOVp6qH\u0026#34;, \u0026#34;gap\u0026#34;: 4.784932453576516, \u0026#34;focus\u0026#34;: 0.10950742943563717 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -28.345097391654008, -2.024649813689564 ], [ -51.62857024908408, -2.024649813689564 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 370, \u0026#34;versionNonce\u0026#34;: 766218931, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;N6Ma9nTDkRpwJvuKYmmfx\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -766.8356556520371, \u0026#34;y\u0026#34;: 0.3674502296514106, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#12b886\u0026#34;, \u0026#34;width\u0026#34;: 384, \u0026#34;height\u0026#34;: 35, \u0026#34;seed\u0026#34;: 586221683, \u0026#34;groupIds\u0026#34;: [ \u0026#34;vrfs_1MU7bXkUXpAW5kIi\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;w1pgytW_AjCNWM3bhH5yA\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;IAMQP0RbT7bEvBSOjKxkY\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;gZEOvam3oYO1ihV0eNQ6S\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402599634, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 396, \u0026#34;versionNonce\u0026#34;: 237129437, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;H99jMCmN\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -700.7155308351425, \u0026#34;y\u0026#34;: 5.367450229651411, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 251.75975036621094, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 48650429, \u0026#34;groupIds\u0026#34;: [ \u0026#34;vrfs_1MU7bXkUXpAW5kIi\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;1IlergNMq9i3jqAGjYmZJ\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402564388, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;get_surface_point_cloud\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;get_surface_point_cloud\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;get_surface_point_cloud\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 409, \u0026#34;versionNonce\u0026#34;: 387209587, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;JzjLuTeB\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -1122.491590792033, \u0026#34;y\u0026#34;: 6.468272347328082, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 306.0997314453125, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 1568657309, \u0026#34;groupIds\u0026#34;: [ \u0026#34;vrfs_1MU7bXkUXpAW5kIi\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;w1pgytW_AjCNWM3bhH5yA\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402564388, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;Get surface points from mesh\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;Get surface points from mesh\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;Get surface points from mesh\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 419, \u0026#34;versionNonce\u0026#34;: 1443785533, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;w1pgytW_AjCNWM3bhH5yA\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -814.7547621329492, \u0026#34;y\u0026#34;: 20.438422624791485, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 42.849539919002495, \u0026#34;height\u0026#34;: 1.7139815967601066, \u0026#34;seed\u0026#34;: 1133735005, \u0026#34;groupIds\u0026#34;: [ \u0026#34;vrfs_1MU7bXkUXpAW5kIi\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694402564388, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;JzjLuTeB\u0026#34;, \u0026#34;focus\u0026#34;: 0.1176120221970722, \u0026#34;gap\u0026#34;: 1.6370972137714261 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;N6Ma9nTDkRpwJvuKYmmfx\u0026#34;, \u0026#34;focus\u0026#34;: -0.5952514779978104, \u0026#34;gap\u0026#34;: 5.069566561909596 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 19.71078836274114, 0 ], [ 42.849539919002495, 1.7139815967601066 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 488, \u0026#34;versionNonce\u0026#34;: 343573203, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;n9edGFU3Na7TWyAAqdGGD\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -877.6311964576541, \u0026#34;y\u0026#34;: 143.48491355911943, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#12b886\u0026#34;, \u0026#34;width\u0026#34;: 384, \u0026#34;height\u0026#34;: 35, \u0026#34;seed\u0026#34;: 586221683, \u0026#34;groupIds\u0026#34;: [ \u0026#34;nBVP6e5LlIFSTXsCMuSyX\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;hVywxHiTODkkBLUAuNXZh\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402605677, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 517, \u0026#34;versionNonce\u0026#34;: 385350557, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;jbU2ARXa\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -782.9811110084354, \u0026#34;y\u0026#34;: 148.48491355911943, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 194.6998291015625, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 48650429, \u0026#34;groupIds\u0026#34;: [ \u0026#34;nBVP6e5LlIFSTXsCMuSyX\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;IAMQP0RbT7bEvBSOjKxkY\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402564388, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;create_from_scans\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;create_from_scans\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;create_from_scans\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 596, \u0026#34;versionNonce\u0026#34;: 1900861619, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;2AQJF5Q8\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -1228.2871315976504, \u0026#34;y\u0026#34;: 149.5857356767961, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 251.01979064941406, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 1568657309, \u0026#34;groupIds\u0026#34;: [ \u0026#34;nBVP6e5LlIFSTXsCMuSyX\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;hVywxHiTODkkBLUAuNXZh\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402564388, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;Create points by scanning\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;Create points by scanning\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;Create points by scanning\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 872, \u0026#34;versionNonce\u0026#34;: 957382653, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;hVywxHiTODkkBLUAuNXZh\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -975.6302437344648, \u0026#34;y\u0026#34;: 163.5558859542595, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 92.92948071490093, \u0026#34;height\u0026#34;: 1.7139815967601066, \u0026#34;seed\u0026#34;: 1133735005, \u0026#34;groupIds\u0026#34;: [ \u0026#34;nBVP6e5LlIFSTXsCMuSyX\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694402564388, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;2AQJF5Q8\u0026#34;, \u0026#34;focus\u0026#34;: 0.11761202219707229, \u0026#34;gap\u0026#34;: 1.6370972137715398 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;n9edGFU3Na7TWyAAqdGGD\u0026#34;, \u0026#34;focus\u0026#34;: -0.5952514779978106, \u0026#34;gap\u0026#34;: 5.06956656190971 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 69.79072915863958, 0 ], [ 92.92948071490093, 1.7139815967601066 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 394, \u0026#34;versionNonce\u0026#34;: 504300605, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;YfuC8pbYO5iik2VSR361Z\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -446.321097057899, \u0026#34;y\u0026#34;: 142.62792276073947, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#12b886\u0026#34;, \u0026#34;width\u0026#34;: 384, \u0026#34;height\u0026#34;: 35, \u0026#34;seed\u0026#34;: 586221683, \u0026#34;groupIds\u0026#34;: [ \u0026#34;-ZvLIJMMURybkTjoqOmH0\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;ACcUJ5RP\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;Y9cLi6S-6-mvj-esu4kp7\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;gZEOvam3oYO1ihV0eNQ6S\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402608910, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 422, \u0026#34;versionNonce\u0026#34;: 576288861, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;ACcUJ5RP\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -345.5010058103404, \u0026#34;y\u0026#34;: 147.62792276073947, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 182.3598175048828, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 48650429, \u0026#34;groupIds\u0026#34;: [ \u0026#34;-ZvLIJMMURybkTjoqOmH0\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694402564388, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;sample_from_mesh\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;sample_from_mesh\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;YfuC8pbYO5iik2VSR361Z\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;sample_from_mesh\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 292, \u0026#34;versionNonce\u0026#34;: 1683916787, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;28npfw35\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 0.16635508583033243, \u0026#34;y\u0026#34;: 147.8717540800361, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 264.69976806640625, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 1568657309, \u0026#34;groupIds\u0026#34;: [ \u0026#34;-ZvLIJMMURybkTjoqOmH0\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;Y9cLi6S-6-mvj-esu4kp7\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694402564388, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;Sampling from mesh directly\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;Sampling from mesh directly\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;Sampling from mesh directly\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 691, \u0026#34;versionNonce\u0026#34;: 225679459, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;Y9cLi6S-6-mvj-esu4kp7\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -5.9075943552384445, \u0026#34;y\u0026#34;: 164.90038339459625, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 51.62857024908408, \u0026#34;height\u0026#34;: 2.856080618733131, \u0026#34;seed\u0026#34;: 295589491, \u0026#34;groupIds\u0026#34;: [ \u0026#34;-ZvLIJMMURybkTjoqOmH0\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694403977110, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;28npfw35\u0026#34;, \u0026#34;focus\u0026#34;: -0.71514798650604, \u0026#34;gap\u0026#34;: 6.073949441068777 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;YfuC8pbYO5iik2VSR361Z\u0026#34;, \u0026#34;gap\u0026#34;: 4.784932453576488, \u0026#34;focus\u0026#34;: 0.10950742943563717 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -28.34509739165398, -2.856080618733124 ], [ -51.62857024908408, -2.856080618733131 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 72, \u0026#34;versionNonce\u0026#34;: 960473283, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;5didaevhd9WgOM7DWBsps\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -373.8367687256523, \u0026#34;y\u0026#34;: -247.70379717808908, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1.7139815967601635, \u0026#34;height\u0026#34;: 49.705466306042865, \u0026#34;seed\u0026#34;: 1164340477, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694403977107, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;WQjgaGIWWRHdo1T0FOzIZ\u0026#34;, \u0026#34;gap\u0026#34;: 8.538390321910924, \u0026#34;focus\u0026#34;: 0.034539477325778924 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;abK8Gl14tDSgNIcOVp6qH\u0026#34;, \u0026#34;gap\u0026#34;: 5.2561433720462105, \u0026#34;focus\u0026#34;: -0.027235516913693938 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 0.8569907983801386, 27.423705548161593 ], [ 1.7139815967601635, 49.705466306042865 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 243, \u0026#34;versionNonce\u0026#34;: 981367021, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;1IlergNMq9i3jqAGjYmZJ\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -378.97871351593255, \u0026#34;y\u0026#34;: -147.43587376762338, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 167.85215847561585, \u0026#34;height\u0026#34;: 145.59253563453382, \u0026#34;seed\u0026#34;: 1574069309, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694403977108, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;abK8Gl14tDSgNIcOVp6qH\u0026#34;, \u0026#34;gap\u0026#34;: 10.306313732376623, \u0026#34;focus\u0026#34;: -0.09391600798079411 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;H99jMCmN\u0026#34;, \u0026#34;focus\u0026#34;: 0.05759139230221366, \u0026#34;gap\u0026#34;: 7.210788362740971 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -139.5616333491821, 117.74433052426878 ], [ -167.85215847561585, 145.59253563453382 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 420, \u0026#34;versionNonce\u0026#34;: 264070963, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;IAMQP0RbT7bEvBSOjKxkY\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -575.3108826730436, \u0026#34;y\u0026#34;: 50.43310056809344, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 103.05978244871585, \u0026#34;height\u0026#34;: 87.41306143476498, \u0026#34;seed\u0026#34;: 237814813, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694402564389, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;N6Ma9nTDkRpwJvuKYmmfx\u0026#34;, \u0026#34;focus\u0026#34;: -0.19343531748139303, \u0026#34;gap\u0026#34;: 15.065650338442026 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;jbU2ARXa\u0026#34;, \u0026#34;focus\u0026#34;: -0.1324752741419713, \u0026#34;gap\u0026#34;: 10.638751556261013 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -77.32854495311653, 59.98935588660339 ], [ -103.05978244871585, 87.41306143476498 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 729, \u0026#34;versionNonce\u0026#34;: 1736102733, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;gZEOvam3oYO1ihV0eNQ6S\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -511.44181021307594, \u0026#34;y\u0026#34;: 49.57610976971336, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 240.5210661810563, \u0026#34;height\u0026#34;: 77.98616265258443, \u0026#34;seed\u0026#34;: 949820275, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694403977110, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;N6Ma9nTDkRpwJvuKYmmfx\u0026#34;, \u0026#34;focus\u0026#34;: 0.20454725362872117, \u0026#34;gap\u0026#34;: 14.208659540061952 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;YfuC8pbYO5iik2VSR361Z\u0026#34;, \u0026#34;gap\u0026#34;: 15.065650338441685, \u0026#34;focus\u0026#34;: 0.17078596357558665 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 203.31268353569538, 55.7044018947032 ], [ 240.5210661810563, 77.98616265258443 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 445, \u0026#34;versionNonce\u0026#34;: 462954157, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;yQXYiebk67MPNWZbNEUOL\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -435.425352026224, \u0026#34;y\u0026#34;: 295.2180211787233, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#7950f2\u0026#34;, \u0026#34;width\u0026#34;: 384, \u0026#34;height\u0026#34;: 35, \u0026#34;seed\u0026#34;: 586221683, \u0026#34;groupIds\u0026#34;: [ \u0026#34;Mvb_IO9jbF4eHJMp_4Jzi\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;WoOgEUFM\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;CUcXt48ZnJWaptHdT5bvR\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694403934405, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 473, \u0026#34;versionNonce\u0026#34;: 1239007501, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;WoOgEUFM\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -274.88532059311854, \u0026#34;y\u0026#34;: 300.2180211787233, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 62.91993713378906, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 48650429, \u0026#34;groupIds\u0026#34;: [ \u0026#34;Mvb_IO9jbF4eHJMp_4Jzi\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694403934405, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;sample\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;sample\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;yQXYiebk67MPNWZbNEUOL\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;sample\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 367, \u0026#34;versionNonce\u0026#34;: 539723661, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;AbmW7afb\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 11.062100117505338, \u0026#34;y\u0026#34;: 300.46185249801994, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 220.2198028564453, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 1568657309, \u0026#34;groupIds\u0026#34;: [ \u0026#34;Mvb_IO9jbF4eHJMp_4Jzi\u0026#34;, \u0026#34;A5oG9wH4\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;CUcXt48ZnJWaptHdT5bvR\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1694432508740, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;Uniform sample method\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;Uniform sample method\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;Uniform sample method\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 18 }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 855, \u0026#34;versionNonce\u0026#34;: 1876706243, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;CUcXt48ZnJWaptHdT5bvR\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 4.988150676436561, \u0026#34;y\u0026#34;: 317.7655266093417, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 51.62857024908408, \u0026#34;height\u0026#34;: 3.1311254154947505, \u0026#34;seed\u0026#34;: 295589491, \u0026#34;groupIds\u0026#34;: [ \u0026#34;Mvb_IO9jbF4eHJMp_4Jzi\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694432508742, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;AbmW7afb\u0026#34;, \u0026#34;focus\u0026#34;: -0.7151479865060403, \u0026#34;gap\u0026#34;: 6.073949441068777 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;yQXYiebk67MPNWZbNEUOL\u0026#34;, \u0026#34;gap\u0026#34;: 4.784932453576488, \u0026#34;focus\u0026#34;: 0.10950742943563715 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -28.34509739165395, -3.1311254154947434 ], [ -51.62857024908408, -3.1311254154947505 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;ellipse\u0026#34;, \u0026#34;version\u0026#34;: 1, \u0026#34;versionNonce\u0026#34;: 650902364, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;uDDmQELH\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 2, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 0, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 270.7618681839116, \u0026#34;y\u0026#34;: 300.46185249801994, \u0026#34;strokeColor\u0026#34;: \u0026#34;rgba(70,130,180,0.05)\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 5, \u0026#34;height\u0026#34;: 5, \u0026#34;seed\u0026#34;: 79620, \u0026#34;groupIds\u0026#34;: [ \u0026#34;A5oG9wH4\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1694432450883, \u0026#34;link\u0026#34;: \u0026#34;[[point-sampling-of-triangle-mesh]]\u0026#34;, \u0026#34;locked\u0026#34;: false } ], \u0026#34;appState\u0026#34;: { \u0026#34;theme\u0026#34;: \u0026#34;light\u0026#34;, \u0026#34;viewBackgroundColor\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;currentItemStrokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;currentItemBackgroundColor\u0026#34;: \u0026#34;#7950f2\u0026#34;, \u0026#34;currentItemFillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;currentItemStrokeWidth\u0026#34;: 1, \u0026#34;currentItemStrokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;currentItemRoughness\u0026#34;: 1, \u0026#34;currentItemOpacity\u0026#34;: 100, \u0026#34;currentItemFontFamily\u0026#34;: 1, \u0026#34;currentItemFontSize\u0026#34;: 20, \u0026#34;currentItemTextAlign\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;currentItemStartArrowhead\u0026#34;: null, \u0026#34;currentItemEndArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;scrollX\u0026#34;: 969.0244904702329, \u0026#34;scrollY\u0026#34;: 149.26989566063844, \u0026#34;zoom\u0026#34;: { \u0026#34;value\u0026#34;: 1 }, \u0026#34;currentItemRoundness\u0026#34;: \u0026#34;round\u0026#34;, \u0026#34;gridSize\u0026#34;: null, \u0026#34;colorPalette\u0026#34;: {}, \u0026#34;currentStrokeOptions\u0026#34;: null, \u0026#34;previousGridSize\u0026#34;: null }, \u0026#34;files\u0026#34;: {} } %%\n","date":"1 January 0001","permalink":"/posts/graphics/mesh-to-sdf/images/mesh-to-sdf-python/","section":"Posts","summary":"==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document.","title":""},{"content":"","date":"1 January 0001","permalink":"/posts/math/dynamical-system/dynamical-system/","section":"Posts","summary":"","title":""},{"content":"==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==\nText Elements # 动力系统：N个状态方程随时间的演化 ^ImJEgA3Y\n构造jacobian矩阵 ^zmJtGgDY\n求jacobian矩阵的特征值 ^SNoWE8oE\n线性 ^8jb411eg\n离散 ^4xyTPzrH\njacobian特征值 均小于0稳定 存在大于0不稳定 小于等于不确定 ^OrpxzpiP\n非线性 ^Xod9dG1h\n构造jacobian矩阵 ^Fji1bQfh\n求出驻点（状态方程为0的点） ^dnEGfvW5\n带入驻点 ^PETdc0WH\n一阶 ^ppqoCjxr\n求解|f\u0026rsquo;(x)|代入固定点 \u0026lt;1线性稳定 =1边缘稳定\n1不稳定 =0超稳定 ^QD3Bv8s9\n二阶 ^hYgsvBs0\n求固定点 ^dUpXjj14\n求jacobian矩阵及特征值 ^OHBrmCzT\n|λ12|\u0026lt;1稳定 |λ12|\u0026gt;1不稳定 一大一小为鞍点 ^GYrSjiqx\nLyapunov 线性化算法 ^eEKMCTOJ\n如果出现不确定点 ^QaGAQ70x\n寻找方程V(x)一般形式为 a(x-x*)^n+a(y-y*)^n+a(z-z*)^n+\u0026hellip; *为不动点 ^W9XDO5vg\n1、若V(x)正定且连续（自带） 2、Δ若v\u0026rsquo;(x)在某个围绕不动点的范围内保证恒小于0则不确定点渐进稳定 ^W83cLdAv\nLyapunov 函数法 ^ZEyIP83d\n不动点判别 ^uzV6rtq0\n极限环： 稳定极限环：内外轨道均靠近 不稳定极限环：内外均远离 半稳定极限环：一靠近一远离 ^uDUiusd7\n梯度系统：x\u0026rsquo;=-ΔV 一维均为梯度系统 二维满足x\u0026rsquo;=f(x,y),y\u0026rsquo;=g(x,y),df/dy=dg/dx 梯度系统必不为闭环 ^QXA5GKSw\n若通过Lyapunov 函数法求得稳定点，那么比不存在极限环 ^Sg5FyOSu\nx\u0026rsquo;=f(x,y),y\u0026rsquo;=g(x,y), df/dy+dg/dx \u0026gt;0 (\u0026lt;0) 不存在极限环 ^mr7pJN1R\n不存在 ^t0nNrtF2\n存在极限环 ^ZjwUwR3Y\n切分岔即分叉点与分叉后的图像相切 ^Q5H605tK\n转换分岔即分叉点前后不动点的性质互换 ^SKoZBdYW\n叉型分岔，分叉点一边一个稳定点，另一边两个稳定点及一个不稳定点 ^GlUV825U\n由不动点变为了极限环，反之亦成立 ^cZaxkvHE\n双周期分岔出现于离散动力系统，当f\u0026rsquo;(x)=-1时会出现二周期分岔。 将原等式右边重新带入方程，进入二阶循环，求不动点，并找出其保持稳定的范围即|f\u0026rsquo;(x)\u0026lt;1| ^cs77AYKy\n吸引子：不动点类型 ^xB5NW5E7\nEmbedded files # 78610d8df48f70fc527825aad1a1e441b7a51b71: [[Pasted Image 20231129170147_906.png]] c2093b76c0a2df105801df15a9fc6e8ee025dc54: [[Pasted Image 20231129170408_893.png]] 2e6328a7e97447f3458b22878d631430c1926913: [[Pasted Image 20231129170457_892.png]] d68df740b14d65c0670f32e89a23750d8d060ec8: [[Pasted Image 20231129170647_891.png]] ef6ae954fcbc00042bdb398235a0f7dc65e6f05d: [[Pasted Image 20231129171139_898.png]] fae392273ba110d4968b56fbe188f7a6881efc4e: [[Pasted Image 20231129172150_755.png]] 1da6dce3a9f56aee5e91268de1d11b6831749b23: [[Pasted Image 20231129172151_123.png]] 1ee05113e2f32dafabe376c147b3d876a758299b: [[Pasted Image 20231129172226_921.png]] 5162c18f58f003dc864df9368c9f2579216adf60: [[Pasted Image 20231129172921_892.png]] 0245be4724f781fb854855e2092a4a1d00406684: [[Pasted Image 20231129173246_891.png]] 138bc38a73d39b2e967020141c9430e9d20d6d27: [[Pasted Image 20231129173541_894.png]] c2b3f4f87c6ae18f19708e4dc9f1c466c0ea7bf4: [[Pasted Image 20231129174642_891.png]] 59c7bac78db0cb9a329edd52839272c2f27264de: [[Pasted Image 20231129174657_900.png]] 2e5cb52706207da2c20a559a4f776907e5daec50: [[Pasted Image 20231129174728_216.png]] 6cae4db5511609da6d9136be3a30845f9489b66c: [[Pasted Image 20231129174754_398.png]] d11b5d59b036c7d9d1ea114f431db7dcb5112cec: [[Pasted Image 20231129182657_892.png]] 840bbc8aee1012aa3b06b4d08ab6cd34cfa19274: [[Pasted Image 20231129182712_939.png]] dd80d316026924d73040d783037c0a79483afdb4: [[Pasted Image 20231129182742_941.png]] a1c18b3f92b20232ff32b223ccdeac1bc551c217: [[Pasted Image 20231129182742_981.png]] 7848a1acf068d84561bc9cde616899dc5b0656d3: [[Pasted Image 20231129182757_950.png]] 16b9a40a41e1d3bf26584af5b51d91b40a1f1f8f: [[Pasted Image 20231129183903_909.png]] a46531e717014ef8cad99ffce3713901c7f608b2: [[Pasted Image 20231129184303_892.png]] 1d66d40d15dcc684ba03eecf66adf21e78d34ad7: [[Pasted Image 20231129184334_891.png]]\n%%\nDrawing # { \u0026#34;type\u0026#34;: \u0026#34;excalidraw\u0026#34;, \u0026#34;version\u0026#34;: 2, \u0026#34;source\u0026#34;: \u0026#34;https://github.com/zsviczian/obsidian-excalidraw-plugin/releases/tag/1.8.24\u0026#34;, \u0026#34;elements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 369, \u0026#34;versionNonce\u0026#34;: 23967965, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;vHp05U2pYRDZnycFGjUq7\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 4281.191689231182, \u0026#34;y\u0026#34;: -2529.716618393408, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;ImJEgA3Y\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;E7Mk4SXbDwueG9NG1KQte\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;NrNzNtRU_bdQT2gEYZNoN\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;zvEu0Deo-PFhCkepHCJFf\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;xPXPB4PvhQDrBwBgMZECd\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701254604524, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 417, \u0026#34;versionNonce\u0026#34;: 1406883613, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;ImJEgA3Y\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 4300.751686789776, \u0026#34;y\u0026#34;: -2498.716618393408, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 332.8800048828125, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254412821, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;动力系统：N个状态方程随时间的演化\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;动力系统：N个状态方程随时间的演化\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;vHp05U2pYRDZnycFGjUq7\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;动力系统：N个状态方程随时间的演化\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 821, \u0026#34;versionNonce\u0026#34;: 1483343069, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;E7Mk4SXbDwueG9NG1KQte\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 4480.797729668173, \u0026#34;y\u0026#34;: -1261.5502212986812, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 4328.282670832894, \u0026#34;height\u0026#34;: 591.7377060398921, \u0026#34;seed\u0026#34;: 1279918877, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615953, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;B928oyT4rQOU1Rlh2Os96\u0026#34;, \u0026#34;gap\u0026#34;: 6.916101731135996, \u0026#34;focus\u0026#34;: -0.8050764823318398 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;c5_-KYXuFnJPH44XHBatI\u0026#34;, \u0026#34;gap\u0026#34;: 22.82714084514464, \u0026#34;focus\u0026#34;: -0.8982943290424923 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -4328.282670832894, 591.7377060398921 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 234, \u0026#34;versionNonce\u0026#34;: 884881629, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;uLDPwVMTCTg7NaN-uTb5w\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -627, \u0026#34;y\u0026#34;: 52.35417175292969, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;zmJtGgDY\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;od9LQ2KV5kmb8RUqZpdNC\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;f3lyy6PTV-wgyF8wa5OUW\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 295, \u0026#34;versionNonce\u0026#34;: 671354739, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;zmJtGgDY\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -520.1199722290039, \u0026#34;y\u0026#34;: 83.35417175292969, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 158.2399444580078, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;构造jacobian矩阵\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;构造jacobian矩阵\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;uLDPwVMTCTg7NaN-uTb5w\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;构造jacobian矩阵\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 264, \u0026#34;versionNonce\u0026#34;: 1436357949, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;W9gFID6TvG0fF2EhYcEe2\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -369.00006103515625, \u0026#34;y\u0026#34;: 532.0208282470703, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;SNoWE8oE\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;f3lyy6PTV-wgyF8wa5OUW\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;m1POVxe22B9wsKvRPYxRo\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;t_0UioaFkyPF_ngFDHlb6\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 335, \u0026#34;versionNonce\u0026#34;: 777496851, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;SNoWE8oE\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -292.12003326416016, \u0026#34;y\u0026#34;: 563.0208282470703, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 218.2399444580078, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;求jacobian矩阵的特征值\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;求jacobian矩阵的特征值\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;W9gFID6TvG0fF2EhYcEe2\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;求jacobian矩阵的特征值\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 155, \u0026#34;versionNonce\u0026#34;: 1772150035, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;siAK9qDmrp2i-kZJt5UBx\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -631.0000610351562, \u0026#34;y\u0026#34;: -122.64585876464844, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;8jb411eg\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;od9LQ2KV5kmb8RUqZpdNC\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701254437201, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 223, \u0026#34;versionNonce\u0026#34;: 105320115, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;8jb411eg\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -465.00006103515625, \u0026#34;y\u0026#34;: -91.64585876464844, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 40, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;线性\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;线性\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;siAK9qDmrp2i-kZJt5UBx\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;线性\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 191, \u0026#34;versionNonce\u0026#34;: 111083987, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;u6c2BblYmddMBOyGA16ap\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 545, \u0026#34;y\u0026#34;: -119.97920227050781, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;4xyTPzrH\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;rhWmqvf9hDTx7lMSXvpyo\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701254434696, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 232, \u0026#34;versionNonce\u0026#34;: 578338899, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;4xyTPzrH\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 711, \u0026#34;y\u0026#34;: -88.97920227050781, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 40, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;离散\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;离散\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;u6c2BblYmddMBOyGA16ap\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;离散\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 216, \u0026#34;versionNonce\u0026#34;: 1857053277, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;_FaOIM7DcI7P9Ds8GrxFo\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -369.00006103515625, \u0026#34;y\u0026#34;: 690.0207672119141, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 110, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;OrpxzpiP\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;t_0UioaFkyPF_ngFDHlb6\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 365, \u0026#34;versionNonce\u0026#34;: 1556299251, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;OrpxzpiP\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -259.8800582885742, \u0026#34;y\u0026#34;: 695.0207672119141, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 153.75999450683594, \u0026#34;height\u0026#34;: 100, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;jacobian特征值\\n均小于0稳定\\n存在大于0不稳定\\n小于等于不确定\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;jacobian特征值\\n均小于0稳定\\n存在大于0不稳定\\n小于等于不确定\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;_FaOIM7DcI7P9Ds8GrxFo\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;jacobian特征值\\n均小于0稳定\\n存在大于0不稳定\\n小于等于不确定\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 92 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 191, \u0026#34;versionNonce\u0026#34;: 848170685, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;2ON6ErTAth94ZTYwbHgSW\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -121.99993896484375, \u0026#34;y\u0026#34;: -120.31257629394531, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;Xod9dG1h\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;E7Mk4SXbDwueG9NG1KQte\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;u1Fsp0EAHhm3VesPF_tyH\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 272, \u0026#34;versionNonce\u0026#34;: 271386515, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;Xod9dG1h\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 34.00006103515625, \u0026#34;y\u0026#34;: -89.31257629394531, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 60, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;非线性\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;非线性\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;2ON6ErTAth94ZTYwbHgSW\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;非线性\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 439, \u0026#34;versionNonce\u0026#34;: 448212765, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;ZkejIQgs6IzA0QNQLG6mU\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -116.99981689453125, \u0026#34;y\u0026#34;: 203.02076721191406, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;Fji1bQfh\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;YkRWfEVPpL8pUNLjtUGpy\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;cuPKmniR3aU6sF-6G5_Ov\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 500, \u0026#34;versionNonce\u0026#34;: 1928109363, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;Fji1bQfh\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -10.119789123535156, \u0026#34;y\u0026#34;: 234.02076721191406, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 158.2399444580078, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;构造jacobian矩阵\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;构造jacobian矩阵\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;ZkejIQgs6IzA0QNQLG6mU\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;构造jacobian矩阵\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 441, \u0026#34;versionNonce\u0026#34;: 1973240701, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;rG6sb8-Uj8vrmOMEExvK8\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -116.33319091796875, \u0026#34;y\u0026#34;: 42.02079772949219, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;dnEGfvW5\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;u1Fsp0EAHhm3VesPF_tyH\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;YkRWfEVPpL8pUNLjtUGpy\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 546, \u0026#34;versionNonce\u0026#34;: 812154579, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;dnEGfvW5\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -67.21319580078125, \u0026#34;y\u0026#34;: 73.02079772949219, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 273.760009765625, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;求出驻点（状态方程为0的点）\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;求出驻点（状态方程为0的点）\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;rG6sb8-Uj8vrmOMEExvK8\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;求出驻点（状态方程为0的点）\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 482, \u0026#34;versionNonce\u0026#34;: 1199688669, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;AUPqeHrHY2l98cM75E8u_\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -111.66668701171875, \u0026#34;y\u0026#34;: 364.35414123535156, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;PETdc0WH\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;cuPKmniR3aU6sF-6G5_Ov\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;m1POVxe22B9wsKvRPYxRo\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 561, \u0026#34;versionNonce\u0026#34;: 1127689331, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;PETdc0WH\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 34.33331298828125, \u0026#34;y\u0026#34;: 395.35414123535156, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 80, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;带入驻点\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;带入驻点\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;AUPqeHrHY2l98cM75E8u_\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;带入驻点\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 211, \u0026#34;versionNonce\u0026#34;: 1135986749, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;od9LQ2KV5kmb8RUqZpdNC\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -441.66668701171875, \u0026#34;y\u0026#34;: -25.812515258789055, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 0.6666259765625, \u0026#34;height\u0026#34;: 64.00003051757811, \u0026#34;seed\u0026#34;: 350345779, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615901, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;siAK9qDmrp2i-kZJt5UBx\u0026#34;, \u0026#34;gap\u0026#34;: 9.833343505859375, \u0026#34;focus\u0026#34;: -0.02085723204147124 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;uLDPwVMTCTg7NaN-uTb5w\u0026#34;, \u0026#34;gap\u0026#34;: 14.166656494140625, \u0026#34;focus\u0026#34;: -0.01037242291315738 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -0.6666259765625, 64.00003051757811 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 193, \u0026#34;versionNonce\u0026#34;: 72595069, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;u1Fsp0EAHhm3VesPF_tyH\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 70.33331298828125, \u0026#34;y\u0026#34;: -27.14585876464843, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 4, \u0026#34;height\u0026#34;: 62.666687011718736, \u0026#34;seed\u0026#34;: 235299699, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615914, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;2ON6ErTAth94ZTYwbHgSW\u0026#34;, \u0026#34;gap\u0026#34;: 6.166717529296875, \u0026#34;focus\u0026#34;: -0.05034240046706163 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;rG6sb8-Uj8vrmOMEExvK8\u0026#34;, \u0026#34;gap\u0026#34;: 6.499969482421875, \u0026#34;focus\u0026#34;: -0.03456457341445048 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -4, 62.666687011718736 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 195, \u0026#34;versionNonce\u0026#34;: 1022484189, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;YkRWfEVPpL8pUNLjtUGpy\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 64.33331298828125, \u0026#34;y\u0026#34;: 132.18748474121094, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1.3333740234375, \u0026#34;height\u0026#34;: 68.66665649414062, \u0026#34;seed\u0026#34;: 1973615123, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615914, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;rG6sb8-Uj8vrmOMEExvK8\u0026#34;, \u0026#34;gap\u0026#34;: 3.16668701171875, \u0026#34;focus\u0026#34;: 0.03339497244584729 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;ZkejIQgs6IzA0QNQLG6mU\u0026#34;, \u0026#34;gap\u0026#34;: 2.1666259765625, \u0026#34;focus\u0026#34;: -0.013095038189978304 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 1.3333740234375, 68.66665649414062 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 210, \u0026#34;versionNonce\u0026#34;: 611056445, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;cuPKmniR3aU6sF-6G5_Ov\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 83.66668701171876, \u0026#34;y\u0026#34;: 299.52082824707037, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 6.6666259765625, \u0026#34;height\u0026#34;: 51.99999999999994, \u0026#34;seed\u0026#34;: 164564563, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615917, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;ZkejIQgs6IzA0QNQLG6mU\u0026#34;, \u0026#34;gap\u0026#34;: 9.50006103515625, \u0026#34;focus\u0026#34;: -0.11202469233760932 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;AUPqeHrHY2l98cM75E8u_\u0026#34;, \u0026#34;gap\u0026#34;: 12.83331298828125, \u0026#34;focus\u0026#34;: -0.023778585762353213 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -6.6666259765625, 51.99999999999994 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 228, \u0026#34;versionNonce\u0026#34;: 2110172957, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;f3lyy6PTV-wgyF8wa5OUW\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -433.66668701171875, \u0026#34;y\u0026#34;: 146.18748474121094, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 243.99999999999997, \u0026#34;height\u0026#34;: 368.0000305175781, \u0026#34;seed\u0026#34;: 919717565, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615899, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;uLDPwVMTCTg7NaN-uTb5w\u0026#34;, \u0026#34;gap\u0026#34;: 6.83331298828125, \u0026#34;focus\u0026#34;: 0.1212044759513913 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;W9gFID6TvG0fF2EhYcEe2\u0026#34;, \u0026#34;gap\u0026#34;: 17.83331298828125, \u0026#34;focus\u0026#34;: 0.15825565895138716 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 243.99999999999997, 368.0000305175781 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 204, \u0026#34;versionNonce\u0026#34;: 1663273885, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;m1POVxe22B9wsKvRPYxRo\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 72.3333129882813, \u0026#34;y\u0026#34;: 464.18751525878906, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 219.33331298828128, \u0026#34;height\u0026#34;: 57.33331298828125, \u0026#34;seed\u0026#34;: 907836883, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615917, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;AUPqeHrHY2l98cM75E8u_\u0026#34;, \u0026#34;gap\u0026#34;: 12.8333740234375, \u0026#34;focus\u0026#34;: -0.6058461647712194 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;W9gFID6TvG0fF2EhYcEe2\u0026#34;, \u0026#34;gap\u0026#34;: 10.5, \u0026#34;focus\u0026#34;: -0.4840385248457768 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -219.33331298828128, 57.33331298828125 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 196, \u0026#34;versionNonce\u0026#34;: 1615109373, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;t_0UioaFkyPF_ngFDHlb6\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -189.8183699552596, \u0026#34;y\u0026#34;: 624.8541412353516, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 2.462475098263326, \u0026#34;height\u0026#34;: 53.33331298828125, \u0026#34;seed\u0026#34;: 363628061, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615906, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;W9gFID6TvG0fF2EhYcEe2\u0026#34;, \u0026#34;gap\u0026#34;: 5.83331298828125, \u0026#34;focus\u0026#34;: 0.04838132528615504 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;_FaOIM7DcI7P9Ds8GrxFo\u0026#34;, \u0026#34;gap\u0026#34;: 11.83331298828125, \u0026#34;focus\u0026#34;: -0.006736227468377695 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 2.462475098263326, 53.33331298828125 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 527, \u0026#34;versionNonce\u0026#34;: 2063588083, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;apDpJjzQUMm192dn2sL18\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 373, \u0026#34;y\u0026#34;: 228.0208282470703, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;ppqoCjxr\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;AfR_J-kqJDY-Xj6bnu4Pq\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;PgFc2iGuM2t1zMWMzgK1A\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 650, \u0026#34;versionNonce\u0026#34;: 431342013, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;ppqoCjxr\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 539, \u0026#34;y\u0026#34;: 259.0208282470703, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 40, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;一阶\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;一阶\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;apDpJjzQUMm192dn2sL18\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;一阶\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 701, \u0026#34;versionNonce\u0026#34;: 1456342163, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;nubnErKP9x9B6PXqWrbjD\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 375.666748046875, \u0026#34;y\u0026#34;: 404.68748474121094, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 135, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;QD3Bv8s9\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;PgFc2iGuM2t1zMWMzgK1A\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 1010, \u0026#34;versionNonce\u0026#34;: 1215332893, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;QD3Bv8s9\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 467.6367874145508, \u0026#34;y\u0026#34;: 409.68748474121094, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 188.05992126464844, \u0026#34;height\u0026#34;: 125, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;求解|f\u0026#39;(x)|代入固定点\\n\u0026lt;1线性稳定\\n=1边缘稳定\\n\u0026gt;1不稳定\\n=0超稳定\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;求解|f\u0026#39;(x)|代入固定点\\n\u0026lt;1线性稳定\\n=1边缘稳定\\n\u0026gt;1不稳定\\n=0超稳定\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;nubnErKP9x9B6PXqWrbjD\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;求解|f\u0026#39;(x)|代入固定点\\n\u0026lt;1线性稳定\\n=1边缘稳定\\n\u0026gt;1不稳定\\n=0超稳定\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 117 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 571, \u0026#34;versionNonce\u0026#34;: 375781939, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;RolExjI2gM2AnoS5yVv6J\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 811.9998779296875, \u0026#34;y\u0026#34;: 230.3542022705078, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;hYgsvBs0\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;cUO_YsLwa3adOUEXkuGYM\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;I8yXbGon1uS39ydawFkvI\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 705, \u0026#34;versionNonce\u0026#34;: 1723086461, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;hYgsvBs0\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 977.9998779296875, \u0026#34;y\u0026#34;: 261.3542022705078, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 40, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;二阶\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;二阶\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;RolExjI2gM2AnoS5yVv6J\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;二阶\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 664, \u0026#34;versionNonce\u0026#34;: 917388243, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;7Dw43nbYc6rf38mgLjlLA\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 548.333251953125, \u0026#34;y\u0026#34;: 48.35414123535156, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;dUpXjj14\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;AfR_J-kqJDY-Xj6bnu4Pq\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;cUO_YsLwa3adOUEXkuGYM\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;rhWmqvf9hDTx7lMSXvpyo\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 801, \u0026#34;versionNonce\u0026#34;: 2135056093, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;dUpXjj14\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 694.333251953125, \u0026#34;y\u0026#34;: 79.35414123535156, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 80, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;求固定点\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;求固定点\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;7Dw43nbYc6rf38mgLjlLA\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;求固定点\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 636, \u0026#34;versionNonce\u0026#34;: 1404914035, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;pwqYsThM6RUTKTi7wx0Lf\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 811.6665649414062, \u0026#34;y\u0026#34;: 391.35423278808594, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 87, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;OHBrmCzT\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;I8yXbGon1uS39ydawFkvI\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;kSbGn1LkGKYV6CBl_lVez\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 802, \u0026#34;versionNonce\u0026#34;: 1219263293, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;OHBrmCzT\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 888.5465927124023, \u0026#34;y\u0026#34;: 422.35423278808594, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 218.2399444580078, \u0026#34;height\u0026#34;: 25, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;求jacobian矩阵及特征值\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;求jacobian矩阵及特征值\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;pwqYsThM6RUTKTi7wx0Lf\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;求jacobian矩阵及特征值\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 17 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 751, \u0026#34;versionNonce\u0026#34;: 1121559315, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;yBMVf8siFn-ap5CNdotzl\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 812.9999389648438, \u0026#34;y\u0026#34;: 553.3541717529297, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 372, \u0026#34;height\u0026#34;: 135, \u0026#34;seed\u0026#34;: 878712499, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;GYrSjiqx\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;kSbGn1LkGKYV6CBl_lVez\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 1111, \u0026#34;versionNonce\u0026#34;: 726928285, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;GYrSjiqx\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 928.9999389648438, \u0026#34;y\u0026#34;: 583.3541717529297, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 140, \u0026#34;height\u0026#34;: 75, \u0026#34;seed\u0026#34;: 2016486973, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 20, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;|λ12|\u0026lt;1稳定\\n|λ12|\u0026gt;1不稳定\\n一大一小为鞍点\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;|λ12|\u0026lt;1稳定\\n|λ12|\u0026gt;1不稳定\\n一大一小为鞍点\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;yBMVf8siFn-ap5CNdotzl\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;|λ12|\u0026lt;1稳定\\n|λ12|\u0026gt;1不稳定\\n一大一小为鞍点\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 67 }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 170, \u0026#34;versionNonce\u0026#34;: 1160737245, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;AfR_J-kqJDY-Xj6bnu4Pq\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 715.333312988281, \u0026#34;y\u0026#34;: 138.85423278808548, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 132.00000000000023, \u0026#34;height\u0026#34;: 69.33331298828125, \u0026#34;seed\u0026#34;: 146655379, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615927, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;7Dw43nbYc6rf38mgLjlLA\u0026#34;, \u0026#34;gap\u0026#34;: 3.5000915527339203, \u0026#34;focus\u0026#34;: -0.26218931012579566 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;apDpJjzQUMm192dn2sL18\u0026#34;, \u0026#34;gap\u0026#34;: 19.83328247070358, \u0026#34;focus\u0026#34;: -0.35802583085678064 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -132.00000000000023, 69.33331298828125 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 172, \u0026#34;versionNonce\u0026#34;: 360656445, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;cUO_YsLwa3adOUEXkuGYM\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 847.333312988281, \u0026#34;y\u0026#34;: 149.52091979980423, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 136.00000000000023, \u0026#34;height\u0026#34;: 74.66662597656261, \u0026#34;seed\u0026#34;: 1650661213, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615927, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;7Dw43nbYc6rf38mgLjlLA\u0026#34;, \u0026#34;gap\u0026#34;: 14.16677856445267, \u0026#34;focus\u0026#34;: -0.030026844835847104 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;RolExjI2gM2AnoS5yVv6J\u0026#34;, \u0026#34;gap\u0026#34;: 6.166656494140966, \u0026#34;focus\u0026#34;: 0.2857788591819499 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 136.00000000000023, 74.66662597656261 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 162, \u0026#34;versionNonce\u0026#34;: 666498237, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;PgFc2iGuM2t1zMWMzgK1A\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 573.9999389648432, \u0026#34;y\u0026#34;: 320.18754577636685, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 14.666625976562386, \u0026#34;height\u0026#34;: 70.66668701171886, \u0026#34;seed\u0026#34;: 582268243, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615922, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;apDpJjzQUMm192dn2sL18\u0026#34;, \u0026#34;gap\u0026#34;: 5.166717529296534, \u0026#34;focus\u0026#34;: -0.12870209521883924 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;nubnErKP9x9B6PXqWrbjD\u0026#34;, \u0026#34;gap\u0026#34;: 13.833251953125227, \u0026#34;focus\u0026#34;: -0.09606483735143666 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -14.666625976562386, 70.66668701171886 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 162, \u0026#34;versionNonce\u0026#34;: 795640573, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;I8yXbGon1uS39ydawFkvI\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 992.7681860710227, \u0026#34;y\u0026#34;: 318.3542022705078, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 6.565126917258567, \u0026#34;height\u0026#34;: 53.83334350585915, \u0026#34;seed\u0026#34;: 978623773, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615930, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;RolExjI2gM2AnoS5yVv6J\u0026#34;, \u0026#34;gap\u0026#34;: 1, \u0026#34;focus\u0026#34;: 0.0557151897673383 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;pwqYsThM6RUTKTi7wx0Lf\u0026#34;, \u0026#34;gap\u0026#34;: 19.166687011718977, \u0026#34;focus\u0026#34;: 0.04866118773551695 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 6.565126917258567, 53.83334350585915 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 166, \u0026#34;versionNonce\u0026#34;: 1478207421, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;kSbGn1LkGKYV6CBl_lVez\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 994.0000610351562, \u0026#34;y\u0026#34;: 490.85429382324196, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 4.000000000000114, \u0026#34;height\u0026#34;: 54.666625976562614, \u0026#34;seed\u0026#34;: 1055865715, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615932, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;pwqYsThM6RUTKTi7wx0Lf\u0026#34;, \u0026#34;gap\u0026#34;: 12.500061035156023, \u0026#34;focus\u0026#34;: 0.0410400263421839 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;yBMVf8siFn-ap5CNdotzl\u0026#34;, \u0026#34;gap\u0026#34;: 7.833251953125114, \u0026#34;focus\u0026#34;: 0.023632231640666364 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 4.000000000000114, 54.666625976562614 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 157, \u0026#34;versionNonce\u0026#34;: 1364745885, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;rhWmqvf9hDTx7lMSXvpyo\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 734.0000610351562, \u0026#34;y\u0026#34;: -29.145706176758374, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1.333251953125, \u0026#34;height\u0026#34;: 66.66662597656249, \u0026#34;seed\u0026#34;: 1924271933, \u0026#34;groupIds\u0026#34;: [ \u0026#34;XEuYncmTwMW8eMC0cCH2a\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615927, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;u6c2BblYmddMBOyGA16ap\u0026#34;, \u0026#34;gap\u0026#34;: 3.8334960937494316, \u0026#34;focus\u0026#34;: -0.010988649292718679 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;7Dw43nbYc6rf38mgLjlLA\u0026#34;, \u0026#34;gap\u0026#34;: 10.833221435547443, \u0026#34;focus\u0026#34;: 0.011166374427961845 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 1.333251953125, 66.66662597656249 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 77, \u0026#34;versionNonce\u0026#34;: 1591869843, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;eEKMCTOJ\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 1068.2962849934893, \u0026#34;y\u0026#34;: 15.150504218206834, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 354.23992919921875, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 2085704179, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;Lyapunov 线性化算法\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;Lyapunov 线性化算法\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;Lyapunov 线性化算法\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 130, \u0026#34;versionNonce\u0026#34;: 2036782365, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;Pn2yPvArRVSD0pVKEXeFl\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -693.1628256522677, \u0026#34;y\u0026#34;: -184.12538942685796, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 2167.4074978298627, \u0026#34;height\u0026#34;: 1034.0741644965287, \u0026#34;seed\u0026#34;: 2126187347, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;C1nShp0dy0rGXu5z0fr0Z\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249113348, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 80, \u0026#34;versionNonce\u0026#34;: 1408738781, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;_18l0fvCIU-tT99m6nqkv\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -94.08065295571407, \u0026#34;y\u0026#34;: 1135.1047693033024, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 719, \u0026#34;height\u0026#34;: 183, \u0026#34;seed\u0026#34;: 751866707, \u0026#34;groupIds\u0026#34;: [ \u0026#34;gjwCg81vdeKXM3ovv9lSk\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;QaGAQ70x\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249107786, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 68, \u0026#34;versionNonce\u0026#34;: 1159983731, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;QaGAQ70x\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 121.41934704428593, \u0026#34;y\u0026#34;: 1204.1047693033024, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 288, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 681489171, \u0026#34;groupIds\u0026#34;: [ \u0026#34;gjwCg81vdeKXM3ovv9lSk\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249107786, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;如果出现不确定点\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;如果出现不确定点\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;_18l0fvCIU-tT99m6nqkv\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;如果出现不确定点\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 118, \u0026#34;versionNonce\u0026#34;: 86041149, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;ddyeptByseVjhyyrmFY3k\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -75.71034588106113, \u0026#34;y\u0026#34;: 1449.771415624917, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 719, \u0026#34;height\u0026#34;: 183, \u0026#34;seed\u0026#34;: 751866707, \u0026#34;groupIds\u0026#34;: [ \u0026#34;gjwCg81vdeKXM3ovv9lSk\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;W9XDO5vg\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249107786, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 218, \u0026#34;versionNonce\u0026#34;: 58928147, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;W9XDO5vg\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -3.79628338106113, \u0026#34;y\u0026#34;: 1473.771415624917, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 575.171875, \u0026#34;height\u0026#34;: 135, \u0026#34;seed\u0026#34;: 681489171, \u0026#34;groupIds\u0026#34;: [ \u0026#34;gjwCg81vdeKXM3ovv9lSk\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249107786, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;寻找方程V(x)一般形式为\\na(x-x*)^n+a(y-y*)^n+a(z-z*)^n+...\\n*为不动点\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;寻找方程V(x)一般形式为\\na(x-x*)^n+a(y-y*)^n+a(z-z*)^n+...\\n*为不动点\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;ddyeptByseVjhyyrmFY3k\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;寻找方程V(x)一般形式为\\na(x-x*)^n+a(y-y*)^n+a(z-z*)^n+...\\n*为不动点\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 121 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 243, \u0026#34;versionNonce\u0026#34;: 1252233885, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;c9De5yWq-9tN2NC_lazV6\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -67.71034588106136, \u0026#34;y\u0026#34;: 1793.1048506835111, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 719, \u0026#34;height\u0026#34;: 183, \u0026#34;seed\u0026#34;: 751866707, \u0026#34;groupIds\u0026#34;: [ \u0026#34;gjwCg81vdeKXM3ovv9lSk\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;W83cLdAv\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249107786, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 470, \u0026#34;versionNonce\u0026#34;: 1359622579, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;W83cLdAv\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -59.56337322481136, \u0026#34;y\u0026#34;: 1817.1048506835111, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 702.7060546875, \u0026#34;height\u0026#34;: 135, \u0026#34;seed\u0026#34;: 681489171, \u0026#34;groupIds\u0026#34;: [ \u0026#34;gjwCg81vdeKXM3ovv9lSk\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249107786, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;1、若V(x)正定且连续（自带）\\n2、Δ若v\u0026#39;(x)在某个围绕不动点的范围内保证\\n恒小于0则不确定点渐进稳定\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;1、若V(x)正定且连续（自带）\\n2、Δ若v\u0026#39;(x)在某个围绕不动点的范围内保证恒小于0则不确定点渐进稳定\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;c9De5yWq-9tN2NC_lazV6\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;1、若V(x)正定且连续（自带）\\n2、Δ若v\u0026#39;(x)在某个围绕不动点的范围内保证恒小于0则不确定点渐进稳定\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 121 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 280, \u0026#34;versionNonce\u0026#34;: 1093744381, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;B4gKagUnXjNmTOV8bJtTU\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -238.29511111853662, \u0026#34;y\u0026#34;: 1077.5676463649338, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1262.6455349392368, \u0026#34;height\u0026#34;: 952.1693444630464, \u0026#34;seed\u0026#34;: 2126187347, \u0026#34;groupIds\u0026#34;: [ \u0026#34;gjwCg81vdeKXM3ovv9lSk\u0026#34; ], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;C1nShp0dy0rGXu5z0fr0Z\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249107786, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 115, \u0026#34;versionNonce\u0026#34;: 249529171, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;ZEyIP83d\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 710.0981040003567, \u0026#34;y\u0026#34;: 1483.6286369558322, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 282.23992919921875, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 2085704179, \u0026#34;groupIds\u0026#34;: [ \u0026#34;gjwCg81vdeKXM3ovv9lSk\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249107786, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;Lyapunov 函数法\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;Lyapunov 函数法\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;left\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;Lyapunov 函数法\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 28, \u0026#34;versionNonce\u0026#34;: 1934315357, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;C1nShp0dy0rGXu5z0fr0Z\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 346.2657457763046, \u0026#34;y\u0026#34;: 855.6523883509208, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 7.61910574776789, \u0026#34;height\u0026#34;: 215.23812430245562, \u0026#34;seed\u0026#34;: 1794586973, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249107787, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;Pn2yPvArRVSD0pVKEXeFl\u0026#34;, \u0026#34;focus\u0026#34;: 0.05696829855062862, \u0026#34;gap\u0026#34;: 5.70361328125 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;B4gKagUnXjNmTOV8bJtTU\u0026#34;, \u0026#34;focus\u0026#34;: -0.03402437306376383, \u0026#34;gap\u0026#34;: 6.677133711557417 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 7.61910574776789, 215.23812430245562 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 61, \u0026#34;versionNonce\u0026#34;: 1565772723, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;GVO_8yBUX-QwMuLXXiROs\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -842.9633421523704, \u0026#34;y\u0026#34;: -290.0899446525344, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 2474.6667480468786, \u0026#34;height\u0026#34;: 2498.6667480468786, \u0026#34;seed\u0026#34;: 144091059, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;NBxysV-xWDaxstSxqkYvF\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701254490416, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 156, \u0026#34;versionNonce\u0026#34;: 524508093, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;uzV6rtq0\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 1357.7029176132576, \u0026#34;y\u0026#34;: 1157.9100553474675, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 180, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 1515215987, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249107787, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;不动点判别\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;不动点判别\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;不动点判别\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 179, \u0026#34;versionNonce\u0026#34;: 1941670099, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;dpU2Lbd085QUth3w22n_H\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2635.5242348458305, \u0026#34;y\u0026#34;: -432.9232179288393, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 599, \u0026#34;height\u0026#34;: 190, \u0026#34;seed\u0026#34;: 116151603, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;uDUiusd7\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;eeY8oed4iE4Mxd9FLJrwq\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;NrNzNtRU_bdQT2gEYZNoN\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701248980171, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 247, \u0026#34;versionNonce\u0026#34;: 1309535293, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;uDUiusd7\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2701.0242348458305, \u0026#34;y\u0026#34;: -427.9232179288393, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 468, \u0026#34;height\u0026#34;: 180, \u0026#34;seed\u0026#34;: 713125565, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701248968050, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;极限环：\\n稳定极限环：内外轨道均靠近\\n不稳定极限环：内外均远离\\n半稳定极限环：一靠近一远离\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;极限环：\\n稳定极限环：内外轨道均靠近\\n不稳定极限环：内外均远离\\n半稳定极限环：一靠近一远离\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;dpU2Lbd085QUth3w22n_H\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;极限环：\\n稳定极限环：内外轨道均靠近\\n不稳定极限环：内外均远离\\n半稳定极限环：一靠近一远离\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 166 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 173, \u0026#34;versionNonce\u0026#34;: 557014845, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;D8nzeEqDjhfowkhYS2XKw\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 1959.883318755085, \u0026#34;y\u0026#34;: 98.60231648090428, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 599, \u0026#34;height\u0026#34;: 235, \u0026#34;seed\u0026#34;: 116151603, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;QXA5GKSw\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701248487693, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 458, \u0026#34;versionNonce\u0026#34;: 596424413, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;QXA5GKSw\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 1968.5214413136787, \u0026#34;y\u0026#34;: 103.60231648090428, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 581.7237548828125, \u0026#34;height\u0026#34;: 225, \u0026#34;seed\u0026#34;: 713125565, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701247483145, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;梯度系统：x\u0026#39;=-ΔV\\n一维均为梯度系统\\n二维满足x\u0026#39;=f(x,y),y\u0026#39;=g(x,y),df/dy=d\\ng/dx\\n梯度系统必不为闭环\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;梯度系统：x\u0026#39;=-ΔV\\n一维均为梯度系统\\n二维满足x\u0026#39;=f(x,y),y\u0026#39;=g(x,y),df/dy=dg/dx\\n梯度系统必不为闭环\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;D8nzeEqDjhfowkhYS2XKw\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;梯度系统：x\u0026#39;=-ΔV\\n一维均为梯度系统\\n二维满足x\u0026#39;=f(x,y),y\u0026#39;=g(x,y),df/dy=dg/dx\\n梯度系统必不为闭环\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 211 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 400, \u0026#34;versionNonce\u0026#34;: 1168310035, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;N4K_WIsccD494yQEfU1Nm\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 1954.7550862393082, \u0026#34;y\u0026#34;: 816.2304022775547, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 599, \u0026#34;height\u0026#34;: 235, \u0026#34;seed\u0026#34;: 116151603, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;Sg5FyOSu\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701248487693, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 768, \u0026#34;versionNonce\u0026#34;: 1993011901, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;Sg5FyOSu\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 1966.2550862393082, \u0026#34;y\u0026#34;: 866.2304022775547, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 576, \u0026#34;height\u0026#34;: 135, \u0026#34;seed\u0026#34;: 713125565, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701248481580, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;若通过Lyapunov \\n函数法求得稳定点，那么比不存在极\\n限环\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;若通过Lyapunov 函数法求得稳定点，那么比不存在极限环\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;N4K_WIsccD494yQEfU1Nm\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;若通过Lyapunov 函数法求得稳定点，那么比不存在极限环\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 121 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 325, \u0026#34;versionNonce\u0026#34;: 425619357, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;l3UJ3_cL8Df7BqSj3VGDB\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 1946.6781279497955, \u0026#34;y\u0026#34;: 453.41010268883724, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 599, \u0026#34;height\u0026#34;: 235, \u0026#34;seed\u0026#34;: 116151603, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;mr7pJN1R\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701248487693, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 644, \u0026#34;versionNonce\u0026#34;: 484117267, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;mr7pJN1R\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2063.694180195889, \u0026#34;y\u0026#34;: 503.41010268883724, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 364.9678955078125, \u0026#34;height\u0026#34;: 135, \u0026#34;seed\u0026#34;: 713125565, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701248480380, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;x\u0026#39;=f(x,y),y\u0026#39;=g(x,y),\\ndf/dy+dg/dx \u0026gt;0 (\u0026lt;0)\\n不存在极限环\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;x\u0026#39;=f(x,y),y\u0026#39;=g(x,y),\\ndf/dy+dg/dx \u0026gt;0 (\u0026lt;0)\\n不存在极限环\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;l3UJ3_cL8Df7BqSj3VGDB\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;x\u0026#39;=f(x,y),y\u0026#39;=g(x,y),\\ndf/dy+dg/dx \u0026gt;0 (\u0026lt;0)\\n不存在极限环\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 121 }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 63, \u0026#34;versionNonce\u0026#34;: 552867293, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;SIQ54fI3_5mQVTXP_FoYS\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 1872.3963075058355, \u0026#34;y\u0026#34;: 16.422938851696813, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 751.6667175292978, \u0026#34;height\u0026#34;: 1241.6667175292978, \u0026#34;seed\u0026#34;: 243823613, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;IX-xTQ10xDms5ARZaMu9o\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701248971342, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 10, \u0026#34;versionNonce\u0026#34;: 1529628883, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;t0nNrtF2\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2221.729589976539, \u0026#34;y\u0026#34;: 1202.256221322401, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 108, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 1831878653, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701248498190, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;不存在\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;不存在\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;不存在\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 66, \u0026#34;versionNonce\u0026#34;: 1213352243, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;L77YBoSF1fjnIvZdum7l7\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2882.7295899765404, \u0026#34;y\u0026#34;: 67.92293885169704, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1291, \u0026#34;height\u0026#34;: 617, \u0026#34;seed\u0026#34;: 979127187, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701248509888, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;78610d8df48f70fc527825aad1a1e441b7a51b71\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 43, \u0026#34;versionNonce\u0026#34;: 87565021, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;nD4To5bL8HIvMCKJuGO9v\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2903.922807702306, \u0026#34;y\u0026#34;: 832.9020343106822, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1240.2798243140908, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;seed\u0026#34;: 889695667, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701248643415, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;c2093b76c0a2df105801df15a9fc6e8ee025dc54\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 83, \u0026#34;versionNonce\u0026#34;: 296541949, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;IJNEWSvDnrBr57mtNrHJf\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2945.569759790943, \u0026#34;y\u0026#34;: 1659.5689044278708, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1148.6527902540056, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;seed\u0026#34;: 844904819, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701248697055, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;2e6328a7e97447f3458b22878d631430c1926913\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 89, \u0026#34;versionNonce\u0026#34;: 2018656755, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;W7cNAIZV6TyAVF4d8SoCu\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 3010.1737013697275, \u0026#34;y\u0026#34;: 2546.235469369277, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1004.4449070964367, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;seed\u0026#34;: 461983571, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249001289, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;d68df740b14d65c0670f32e89a23750d8d060ec8\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 112, \u0026#34;versionNonce\u0026#34;: 1774629459, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;UEfsreVrQ3lRiCSDQnlrk\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2874.896765269507, \u0026#34;y\u0026#34;: 0.58965638099221, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1390.0000000000023, \u0026#34;height\u0026#34;: 3513.3332824707077, \u0026#34;seed\u0026#34;: 1427791987, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;eeY8oed4iE4Mxd9FLJrwq\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701249005378, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 30, \u0026#34;versionNonce\u0026#34;: 750235667, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;IX-xTQ10xDms5ARZaMu9o\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2844.896765269507, \u0026#34;y\u0026#34;: -256.0770611483049, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 490.0000000000009, \u0026#34;height\u0026#34;: 266.6667175292971, \u0026#34;seed\u0026#34;: 1396949523, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701248987742, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: null, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;SIQ54fI3_5mQVTXP_FoYS\u0026#34;, \u0026#34;focus\u0026#34;: -0.6889243623982959, \u0026#34;gap\u0026#34;: 5.833282470704717 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -490.0000000000009, 266.6667175292971 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 123, \u0026#34;versionNonce\u0026#34;: 1294575645, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;eeY8oed4iE4Mxd9FLJrwq\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 2960.072950384597, \u0026#34;y\u0026#34;: -239.41034361900802, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 528.4981714126288, \u0026#34;height\u0026#34;: 233.33328247070335, \u0026#34;seed\u0026#34;: 677806707, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615943, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;dpU2Lbd085QUth3w22n_H\u0026#34;, \u0026#34;gap\u0026#34;: 3.512874309831261, \u0026#34;focus\u0026#34;: 0.38486907245793034 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;UEfsreVrQ3lRiCSDQnlrk\u0026#34;, \u0026#34;gap\u0026#34;: 6.666717529297102, \u0026#34;focus\u0026#34;: 0.8371304839666843 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 528.4981714126288, 233.33328247070335 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 405, \u0026#34;versionNonce\u0026#34;: 89693309, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;NrNzNtRU_bdQT2gEYZNoN\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 4551.386128263508, \u0026#34;y\u0026#34;: -1263.854821971874, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1428.309395532664, \u0026#34;height\u0026#34;: 811.1111958821623, \u0026#34;seed\u0026#34;: 1534274867, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615943, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;B928oyT4rQOU1Rlh2Os96\u0026#34;, \u0026#34;gap\u0026#34;: 4.611501057943315, \u0026#34;focus\u0026#34;: -0.5101958839155059 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;dpU2Lbd085QUth3w22n_H\u0026#34;, \u0026#34;gap\u0026#34;: 19.82040816087232, \u0026#34;focus\u0026#34;: -0.0302880626022437 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -1428.309395532664, 811.1111958821623 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 19, \u0026#34;versionNonce\u0026#34;: 980496413, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;ZjwUwR3Y\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 3494.8965618189877, \u0026#34;y\u0026#34;: 3465.0339821459697, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 180, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 1482325181, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249010528, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;存在极限环\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;存在极限环\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;存在极限环\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 135, \u0026#34;versionNonce\u0026#34;: 949623635, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;B928oyT4rQOU1Rlh2Os96\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 4002.8405315455484, \u0026#34;y\u0026#34;: -1961.4663230298172, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1133, \u0026#34;height\u0026#34;: 693, \u0026#34;seed\u0026#34;: 518850781, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;NrNzNtRU_bdQT2gEYZNoN\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;E7Mk4SXbDwueG9NG1KQte\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;zvEu0Deo-PFhCkepHCJFf\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;sepuLkVfHH1ZPn-EowDB2\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701254591731, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;ef6ae954fcbc00042bdb398235a0f7dc65e6f05d\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;version\u0026#34;: 232, \u0026#34;versionNonce\u0026#34;: 1240524189, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;zvEu0Deo-PFhCkepHCJFf\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 4466.454522987853, \u0026#34;y\u0026#34;: -2428.299300324739, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 65.58242006527144, \u0026#34;height\u0026#34;: 445.0829772949214, \u0026#34;seed\u0026#34;: 1913207891, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254615893, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;vHp05U2pYRDZnycFGjUq7\u0026#34;, \u0026#34;gap\u0026#34;: 14.417318068669374, \u0026#34;focus\u0026#34;: 0.04818497005605119 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;B928oyT4rQOU1Rlh2Os96\u0026#34;, \u0026#34;gap\u0026#34;: 21.75, \u0026#34;focus\u0026#34;: 0.027459176297255212 }, \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 65.58242006527144, 445.0829772949214 ] ] }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 97, \u0026#34;versionNonce\u0026#34;: 1486331315, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;a6NwfxsMRgClJgWw9pALh\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 4977.577492544564, \u0026#34;y\u0026#34;: -172.93124816002273, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1081.3039914134354, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;seed\u0026#34;: 1840804851, \u0026#34;groupIds\u0026#34;: [ \u0026#34;Q5m6SvGBZSi25WQlc0wlu\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249788583, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;fae392273ba110d4968b56fbe188f7a6881efc4e\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 249, \u0026#34;versionNonce\u0026#34;: 1417710333, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;rFG3cr8NPTigpl-cUunEG\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 6171.396358368468, \u0026#34;y\u0026#34;: -135.68800271731448, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1427, \u0026#34;height\u0026#34;: 657, \u0026#34;seed\u0026#34;: 1193832093, \u0026#34;groupIds\u0026#34;: [ \u0026#34;Q5m6SvGBZSi25WQlc0wlu\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249788583, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;1da6dce3a9f56aee5e91268de1d11b6831749b23\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 108, \u0026#34;versionNonce\u0026#34;: 434073427, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;AA8z_SgM0bnnP7-RyL0GQ\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 7714.43733137623, \u0026#34;y\u0026#34;: -176.2643780428354, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1027.5855344532306, \u0026#34;height\u0026#34;: 713.7083740234374, \u0026#34;seed\u0026#34;: 1908821523, \u0026#34;groupIds\u0026#34;: [ \u0026#34;Q5m6SvGBZSi25WQlc0wlu\u0026#34; ], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701249788583, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;1ee05113e2f32dafabe376c147b3d876a758299b\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 49, \u0026#34;versionNonce\u0026#34;: 462802237, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;j7Lr8A0Y03148-HRO256w\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 5058.050724731166, \u0026#34;y\u0026#34;: 636.4570403696619, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1261.0307467407977, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;seed\u0026#34;: 1551663219, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701250158626, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;5162c18f58f003dc864df9368c9f2579216adf60\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 80, \u0026#34;versionNonce\u0026#34;: 283757075, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;ngLxF-Brnny7oWXySpk1Y\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 5032.269711382814, \u0026#34;y\u0026#34;: 611.0890729759989, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1302.2222222222217, \u0026#34;height\u0026#34;: 1044.4445122612847, \u0026#34;seed\u0026#34;: 1376105885, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701250166866, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 182, \u0026#34;versionNonce\u0026#34;: 1111221213, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;Q5H605tK\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 5423.52888021962, \u0026#34;y\u0026#34;: 1522.2001162702697, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 576, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 1492334845, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701250311649, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;切分岔即分叉点与分叉后的图像相切\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;切分岔即分叉点与分叉后的图像相切\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;切分岔即分叉点与分叉后的图像相切\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 35, \u0026#34;versionNonce\u0026#34;: 583156381, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;An7HffDd8-_y6j0pjmTgY\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 6736.827349348238, \u0026#34;y\u0026#34;: 630.5311370493496, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1150.884724069149, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;seed\u0026#34;: 1865746547, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701250334684, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;0245be4724f781fb854855e2092a4a1d00406684\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 72, \u0026#34;versionNonce\u0026#34;: 1696651293, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;9CLF_lfIGqsRrQd2fboAb\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 6664.862349186632, \u0026#34;y\u0026#34;: 571.0890729759988, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1324.444580078126, \u0026#34;height\u0026#34;: 1038.518541124132, \u0026#34;seed\u0026#34;: 326009267, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701250339349, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 112, \u0026#34;versionNonce\u0026#34;: 1974467603, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;SKoZBdYW\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 7006.365181992933, \u0026#34;y\u0026#34;: 1502.7292329462368, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 648, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 516228563, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701251371580, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;转换分岔即分叉点前后不动点的性质互换\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;转换分岔即分叉点前后不动点的性质互换\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;转换分岔即分叉点前后不动点的性质互换\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 146, \u0026#34;versionNonce\u0026#34;: 1139129587, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;QVa8-Qvbq1uDFvx9oPg2H\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 8478.791245654884, \u0026#34;y\u0026#34;: 701.2718834414936, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 975.1049213647157, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;seed\u0026#34;: 1895654557, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254363825, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;138bc38a73d39b2e967020141c9430e9d20d6d27\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 152, \u0026#34;versionNonce\u0026#34;: 605487037, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;QyGt6M3uT_dZIvsJBLrIk\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 8311.52898194488, \u0026#34;y\u0026#34;: 609.2371137474831, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1348.1483289930557, \u0026#34;height\u0026#34;: 1139.259304470486, \u0026#34;seed\u0026#34;: 1632441875, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254363825, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 202, \u0026#34;versionNonce\u0026#34;: 212313747, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;GlUV825U\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 8355.751204167103, \u0026#34;y\u0026#34;: 1592.2001671328994, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1116, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 2064603987, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254363825, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;叉型分岔，分叉点一边一个稳定点，另一边两个稳定点及一个不稳定点\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;叉型分岔，分叉点一边一个稳定点，另一边两个稳定点及一个不稳定点\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;叉型分岔，分叉点一边一个稳定点，另一边两个稳定点及一个不稳定点\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 83, \u0026#34;versionNonce\u0026#34;: 188593757, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;udY7N3FzJBycNttjnq-Rp\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 5042.936739833208, \u0026#34;y\u0026#34;: 1978.679533859245, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1003.8509474394937, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;seed\u0026#34;: 139792605, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254368991, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;c2b3f4f87c6ae18f19708e4dc9f1c466c0ea7bf4\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 88, \u0026#34;versionNonce\u0026#34;: 426060275, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;EjI5XC8GsqzKDp_uOJn5G\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 6153.350218346132, \u0026#34;y\u0026#34;: 2042.3832149573363, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 987.468977392814, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;seed\u0026#34;: 473294643, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254368991, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;59c7bac78db0cb9a329edd52839272c2f27264de\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;version\u0026#34;: 119, \u0026#34;versionNonce\u0026#34;: 2052121277, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;w9iiyu3MTSsyvJkKAuvk6\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 4997.770987225022, \u0026#34;y\u0026#34;: 2809.7908484208774, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 1061.7475928851363, \u0026#34;height\u0026#34;: 654.4492051866323, \u0026#34;seed\u0026#34;: 1319020499, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254368991, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;2e5cb52706207da2c20a559a4f776907e5daec50\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;9b5gHg_lymlQ_lGPIZfIu\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;x\u0026#34;: 6152.798461657111, \u0026#34;y\u0026#34;: 2885.2192512761603, \u0026#34;width\u0026#34;: 1053.4632979075113, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 72799667, \u0026#34;version\u0026#34;: 96, \u0026#34;versionNonce\u0026#34;: 967930771, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254368991, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;6cae4db5511609da6d9136be3a30845f9489b66c\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;5taxNXGiHkXk913Zkamju\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;x\u0026#34;: 4983.339925063994, \u0026#34;y\u0026#34;: 1954.4542235487602, \u0026#34;width\u0026#34;: 2285.714372907367, \u0026#34;height\u0026#34;: 1939.0476117815292, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;seed\u0026#34;: 212078259, \u0026#34;version\u0026#34;: 96, \u0026#34;versionNonce\u0026#34;: 184517405, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254368991, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;id\u0026#34;: \u0026#34;cZaxkvHE\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;x\u0026#34;: 5633.434843451272, \u0026#34;y\u0026#34;: 3785.882816775601, \u0026#34;width\u0026#34;: 576, \u0026#34;height\u0026#34;: 45, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 1443518493, \u0026#34;version\u0026#34;: 100, \u0026#34;versionNonce\u0026#34;: 1224968499, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254368991, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;text\u0026#34;: \u0026#34;由不动点变为了极限环，反之亦成立\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;由不动点变为了极限环，反之亦成立\u0026#34;, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;baseline\u0026#34;: 31, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;由不动点变为了极限环，反之亦成立\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25 }, { \u0026#34;id\u0026#34;: \u0026#34;e4f1nNHlWPoBEf6ymRkeP\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;x\u0026#34;: 7645.567857952836, \u0026#34;y\u0026#34;: 2160.457113999373, \u0026#34;width\u0026#34;: 956.4948003774514, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 559003283, \u0026#34;version\u0026#34;: 159, \u0026#34;versionNonce\u0026#34;: 895340061, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254377959, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;d11b5d59b036c7d9d1ea114f431db7dcb5112cec\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;eJjGaC1rgG0zhgjzKVxsn\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;x\u0026#34;: 8754.529456608203, \u0026#34;y\u0026#34;: 2159.5046167895525, \u0026#34;width\u0026#34;: 942.3808943613599, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 456494995, \u0026#34;version\u0026#34;: 120, \u0026#34;versionNonce\u0026#34;: 851668531, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254377959, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;840bbc8aee1012aa3b06b4d08ab6cd34cfa19274\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;1YvpFHTN0oDNL6nZFEAGT\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;x\u0026#34;: 7616.827167676758, \u0026#34;y\u0026#34;: 3023.949254996398, \u0026#34;width\u0026#34;: 949.2141599102644, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 382174227, \u0026#34;version\u0026#34;: 292, \u0026#34;versionNonce\u0026#34;: 1612186237, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254377959, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;dd80d316026924d73040d783037c0a79483afdb4\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;W7qSODY-4TT_RMC5MLybe\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;x\u0026#34;: 8735.064445944525, \u0026#34;y\u0026#34;: 3059.187292105773, \u0026#34;width\u0026#34;: 962.263529155978, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 2056649491, \u0026#34;version\u0026#34;: 285, \u0026#34;versionNonce\u0026#34;: 1329410003, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254377959, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;a1c18b3f92b20232ff32b223ccdeac1bc551c217\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;fbDMzTxgG5zm8cTgiXV7k\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;x\u0026#34;: 7568.352951949382, \u0026#34;y\u0026#34;: 3911.8855110417844, \u0026#34;width\u0026#34;: 943.3053322504287, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 1804745501, \u0026#34;version\u0026#34;: 131, \u0026#34;versionNonce\u0026#34;: 843885277, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254377959, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;7848a1acf068d84561bc9cde616899dc5b0656d3\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;vUZviMEmjYm0AyraQ0txM\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;x\u0026#34;: 7470.910496236804, \u0026#34;y\u0026#34;: 1996.866703494352, \u0026#34;width\u0026#34;: 2650.6669921875, \u0026#34;height\u0026#34;: 2744.0001220703125, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 0.5, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;seed\u0026#34;: 1494214429, \u0026#34;version\u0026#34;: 133, \u0026#34;versionNonce\u0026#34;: 1138703261, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254400718, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;id\u0026#34;: \u0026#34;cs77AYKy\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;x\u0026#34;: 8519.814630351382, \u0026#34;y\u0026#34;: 4177.0148900720405, \u0026#34;width\u0026#34;: 1450.0439453125, \u0026#34;height\u0026#34;: 90, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 2028559869, \u0026#34;version\u0026#34;: 456, \u0026#34;versionNonce\u0026#34;: 1015891773, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254377959, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;text\u0026#34;: \u0026#34;双周期分岔出现于离散动力系统，当f\u0026#39;(x)=-1时会出现二周期分岔。\\n将原等式右边重新带入方程，进入二阶循环，求不动点，并找出其保持稳定的范围即|f\u0026#39;(x)\u0026lt;1|\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;双周期分岔出现于离散动力系统，当f\u0026#39;(x)=-1时会出现二周期分岔。\\n将原等式右边重新带入方程，进入二阶循环，求不动点，并找出其保持稳定的范围即|f\u0026#39;(x)\u0026lt;1|\u0026#34;, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;top\u0026#34;, \u0026#34;baseline\u0026#34;: 76, \u0026#34;containerId\u0026#34;: null, \u0026#34;originalText\u0026#34;: \u0026#34;双周期分岔出现于离散动力系统，当f\u0026#39;(x)=-1时会出现二周期分岔。\\n将原等式右边重新带入方程，进入二阶循环，求不动点，并找出其保持稳定的范围即|f\u0026#39;(x)\u0026lt;1|\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25 }, { \u0026#34;id\u0026#34;: \u0026#34;IkUdfmjVqpk84F1djVK6j\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;x\u0026#34;: 9139.440834698655, \u0026#34;y\u0026#34;: -186.50644680134064, \u0026#34;width\u0026#34;: 1054.4289766199452, \u0026#34;height\u0026#34;: 779.3605479364812, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 1791939667, \u0026#34;version\u0026#34;: 177, \u0026#34;versionNonce\u0026#34;: 1299249277, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254356680, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;16b9a40a41e1d3bf26584af5b51d91b40a1f1f8f\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;IxNFsMJ7BVqQgi15OHz5N\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;x\u0026#34;: 4690.577908888684, \u0026#34;y\u0026#34;: -521.3187484370824, \u0026#34;width\u0026#34;: 5686.667480468749, \u0026#34;height\u0026#34;: 5346.666870117186, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;seed\u0026#34;: 718422525, \u0026#34;version\u0026#34;: 93, \u0026#34;versionNonce\u0026#34;: 2080454899, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;sepuLkVfHH1ZPn-EowDB2\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701254591731, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;rectangle\u0026#34;, \u0026#34;version\u0026#34;: 228, \u0026#34;versionNonce\u0026#34;: 149256691, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;c5_-KYXuFnJPH44XHBatI\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: -115.58883915819206, \u0026#34;y\u0026#34;: -646.9853744136444, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 599, \u0026#34;height\u0026#34;: 190, \u0026#34;seed\u0026#34;: 116151603, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 3 }, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;id\u0026#34;: \u0026#34;xB5NW5E7\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;E7Mk4SXbDwueG9NG1KQte\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;YOYkxWca_k9RiCGYRXohG\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701254583733, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false }, { \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;version\u0026#34;: 342, \u0026#34;versionNonce\u0026#34;: 1135027315, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;id\u0026#34;: \u0026#34;xB5NW5E7\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 1, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;angle\u0026#34;: 0, \u0026#34;x\u0026#34;: 21.91116084180794, \u0026#34;y\u0026#34;: -574.4853744136444, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;width\u0026#34;: 324, \u0026#34;height\u0026#34;: 45, \u0026#34;seed\u0026#34;: 713125565, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;boundElements\u0026#34;: [], \u0026#34;updated\u0026#34;: 1701254473003, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;fontSize\u0026#34;: 36, \u0026#34;fontFamily\u0026#34;: 1, \u0026#34;text\u0026#34;: \u0026#34;吸引子：不动点类型\u0026#34;, \u0026#34;rawText\u0026#34;: \u0026#34;吸引子：不动点类型\u0026#34;, \u0026#34;textAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;verticalAlign\u0026#34;: \u0026#34;middle\u0026#34;, \u0026#34;containerId\u0026#34;: \u0026#34;c5_-KYXuFnJPH44XHBatI\u0026#34;, \u0026#34;originalText\u0026#34;: \u0026#34;吸引子：不动点类型\u0026#34;, \u0026#34;lineHeight\u0026#34;: 1.25, \u0026#34;baseline\u0026#34;: 31 }, { \u0026#34;id\u0026#34;: \u0026#34;NBxysV-xWDaxstSxqkYvF\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;x\u0026#34;: 170.57742060743294, \u0026#34;y\u0026#34;: -461.3186263667694, \u0026#34;width\u0026#34;: 8, \u0026#34;height\u0026#34;: 170.666748046875, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 0.5, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;seed\u0026#34;: 996404915, \u0026#34;version\u0026#34;: 19, \u0026#34;versionNonce\u0026#34;: 1604851421, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254579788, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -8, 170.666748046875 ] ], \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startBinding\u0026#34;: null, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;GVO_8yBUX-QwMuLXXiROs\u0026#34;, \u0026#34;focus\u0026#34;: -0.22407775001449684, \u0026#34;gap\u0026#34;: 1 }, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;lslF5HKe3iMr4-j8I4KBN\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;x\u0026#34;: -1530.4694469422661, \u0026#34;y\u0026#34;: -1059.5063094722382, \u0026#34;width\u0026#34;: 1172.7602390056484, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 0.5, \u0026#34;strokeStyle\u0026#34;: \u0026#34;dashed\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 1452538387, \u0026#34;version\u0026#34;: 74, \u0026#34;versionNonce\u0026#34;: 1957151635, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;YOYkxWca_k9RiCGYRXohG\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701254583733, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;a46531e717014ef8cad99ffce3713901c7f608b2\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;YOYkxWca_k9RiCGYRXohG\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;x\u0026#34;: -138.756075486317, \u0026#34;y\u0026#34;: -541.3186263667694, \u0026#34;width\u0026#34;: 202.66650390625006, \u0026#34;height\u0026#34;: 61.3333740234375, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 0.5, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;seed\u0026#34;: 1605308787, \u0026#34;version\u0026#34;: 45, \u0026#34;versionNonce\u0026#34;: 703553853, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254615953, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ -202.66650390625006, -61.3333740234375 ] ], \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;c5_-KYXuFnJPH44XHBatI\u0026#34;, \u0026#34;gap\u0026#34;: 23.167236328125, \u0026#34;focus\u0026#34;: -0.583479765834866 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;lslF5HKe3iMr4-j8I4KBN\u0026#34;, \u0026#34;gap\u0026#34;: 16.2866285440507, \u0026#34;focus\u0026#34;: -0.15419118111559757 }, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;sepuLkVfHH1ZPn-EowDB2\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;x\u0026#34;: 4605.244168654308, \u0026#34;y\u0026#34;: -1242.652000390207, \u0026#34;width\u0026#34;: 2682.666748046875, \u0026#34;height\u0026#34;: 706.6666259765625, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 0.5, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;seed\u0026#34;: 1979605491, \u0026#34;version\u0026#34;: 47, \u0026#34;versionNonce\u0026#34;: 1244018525, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254591731, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 2682.666748046875, 706.6666259765625 ] ], \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;B928oyT4rQOU1Rlh2Os96\u0026#34;, \u0026#34;focus\u0026#34;: 0.7319684324966572, \u0026#34;gap\u0026#34;: 25.814322639610282 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;IxNFsMJ7BVqQgi15OHz5N\u0026#34;, \u0026#34;focus\u0026#34;: 0.7664965516210982, \u0026#34;gap\u0026#34;: 14.66662597656159 }, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34; }, { \u0026#34;id\u0026#34;: \u0026#34;mMNjYhWPs8YsxcmvKCZT3\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image\u0026#34;, \u0026#34;x\u0026#34;: 5133.457020526828, \u0026#34;y\u0026#34;: -2850.1729354488007, \u0026#34;width\u0026#34;: 1042.2408001612102, \u0026#34;height\u0026#34;: 713.7083740234375, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 0.5, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: null, \u0026#34;seed\u0026#34;: 439987443, \u0026#34;version\u0026#34;: 33, \u0026#34;versionNonce\u0026#34;: 1616680253, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;xPXPB4PvhQDrBwBgMZECd\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;updated\u0026#34;: 1701254604524, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;status\u0026#34;: \u0026#34;pending\u0026#34;, \u0026#34;fileId\u0026#34;: \u0026#34;1d66d40d15dcc684ba03eecf66adf21e78d34ad7\u0026#34;, \u0026#34;scale\u0026#34;: [ 1, 1 ] }, { \u0026#34;id\u0026#34;: \u0026#34;xPXPB4PvhQDrBwBgMZECd\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;x\u0026#34;: 4671.910916701183, \u0026#34;y\u0026#34;: -2469.3186263667694, \u0026#34;width\u0026#34;: 439.79610382564533, \u0026#34;height\u0026#34;: 21.718367539266183, \u0026#34;angle\u0026#34;: 0, \u0026#34;strokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;fillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;strokeWidth\u0026#34;: 0.5, \u0026#34;strokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;roughness\u0026#34;: 1, \u0026#34;opacity\u0026#34;: 100, \u0026#34;groupIds\u0026#34;: [], \u0026#34;roundness\u0026#34;: { \u0026#34;type\u0026#34;: 2 }, \u0026#34;seed\u0026#34;: 1573156285, \u0026#34;version\u0026#34;: 41, \u0026#34;versionNonce\u0026#34;: 828123645, \u0026#34;isDeleted\u0026#34;: false, \u0026#34;boundElements\u0026#34;: null, \u0026#34;updated\u0026#34;: 1701254615893, \u0026#34;link\u0026#34;: null, \u0026#34;locked\u0026#34;: false, \u0026#34;points\u0026#34;: [ [ 0, 0 ], [ 439.79610382564533, 21.718367539266183 ] ], \u0026#34;lastCommittedPoint\u0026#34;: null, \u0026#34;startBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;vHp05U2pYRDZnycFGjUq7\u0026#34;, \u0026#34;gap\u0026#34;: 18.719227470000988, \u0026#34;focus\u0026#34;: 0.12884796708846802 }, \u0026#34;endBinding\u0026#34;: { \u0026#34;elementId\u0026#34;: \u0026#34;mMNjYhWPs8YsxcmvKCZT3\u0026#34;, \u0026#34;gap\u0026#34;: 21.75, \u0026#34;focus\u0026#34;: -0.189569056557449 }, \u0026#34;startArrowhead\u0026#34;: null, \u0026#34;endArrowhead\u0026#34;: \u0026#34;arrow\u0026#34; } ], \u0026#34;appState\u0026#34;: { \u0026#34;theme\u0026#34;: \u0026#34;light\u0026#34;, \u0026#34;viewBackgroundColor\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;currentItemStrokeColor\u0026#34;: \u0026#34;#000000\u0026#34;, \u0026#34;currentItemBackgroundColor\u0026#34;: \u0026#34;transparent\u0026#34;, \u0026#34;currentItemFillStyle\u0026#34;: \u0026#34;hachure\u0026#34;, \u0026#34;currentItemStrokeWidth\u0026#34;: 0.5, \u0026#34;currentItemStrokeStyle\u0026#34;: \u0026#34;solid\u0026#34;, \u0026#34;currentItemRoughness\u0026#34;: 1, \u0026#34;currentItemOpacity\u0026#34;: 100, \u0026#34;currentItemFontFamily\u0026#34;: 1, \u0026#34;currentItemFontSize\u0026#34;: 36, \u0026#34;currentItemTextAlign\u0026#34;: \u0026#34;center\u0026#34;, \u0026#34;currentItemStartArrowhead\u0026#34;: null, \u0026#34;currentItemEndArrowhead\u0026#34;: \u0026#34;arrow\u0026#34;, \u0026#34;scrollX\u0026#34;: -2747.910916701183, \u0026#34;scrollY\u0026#34;: 3441.485313378488, \u0026#34;zoom\u0026#34;: { \u0026#34;value\u0026#34;: 0.25 }, \u0026#34;currentItemRoundness\u0026#34;: \u0026#34;round\u0026#34;, \u0026#34;gridSize\u0026#34;: null, \u0026#34;colorPalette\u0026#34;: {}, \u0026#34;currentStrokeOptions\u0026#34;: null, \u0026#34;previousGridSize\u0026#34;: null }, \u0026#34;files\u0026#34;: {} } %%\n","date":"1 January 0001","permalink":"/posts/math/dynamical-system/images/drawing-2023-11-29-11.10.40.excalidraw/","section":"Posts","summary":"==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document.","title":""},{"content":" Framework # Definition # Usage # ","date":"1 January 0001","permalink":"/posts/math/limit/limit/","section":"Posts","summary":" Framework # Definition # Usage # ","title":""},{"content":" taichi目前可以自动并行嵌套循环，同时对于ti.func标记的函数也会自动并行，但相对于直接嵌套循环会多出一定的访存开销，但影响不大。python无法直接调用被ti.func标记的函数，但是taichi可以调用python的普通函数，但是无法对其并行。而且由于ti.kernel中的变量类型为taichi专属，因此难以实现参数传递（基本上只能通过ndarray与其他numpy类型交互）。 import time @ti.func def add(m : ti.int64) -\u0026gt; ti.int64: res = ti.int64(0) for i in range(m): res+=i return res def addcpu(m : np.int64) -\u0026gt; np.int64: res = np.int64(0) for i in range(m): res+=i return res @ti.kernel def test(n : ti.int64, m:ti.int64) -\u0026gt; ti.int64: res = ti.int64(0) for i in range(n): res += add(m) return res n=1 m=100000000 start = time.time() # res = 0 # for i in range(m): # res += i res = np.int64(0) res = test(n,m) print(res) print(time.time() - start) taichi 会根据执行效率自动选择是否将代码并行，对于小规模问题，taichi可能会自动选择串行处理。 taichi1.6官文中显示kernel中的参数元素长度应该小于32（OpenGL）or 64（others），但此处应为说明错误，对于return存在长度限制，但是对于参数并不存在参数元素数量限制。下面实例中，作为参数的ndarray没有长度限制，但作为返回值的vector在超过64后虽然返回了正确值，但存在错误警告。 impot taichi as ti ti.init(arch=ti.cuda) # 设置问题规模 size = 100 # @ti.kernel # def add_arrays(a: ti.types.ndarray(), b: ti.types.ndarray(), c: ti.types.ndarray()): # for i in range(size): # c[i] = a[i] + b[i] # 声明并初始化两个长度为1000的数组 # a = ti.ndarray(ti.float32, shape=size) b = ti.ndarray(ti.float32, shape=size) c = ti.ndarray(ti.float32, shape=size) @ti.kernel def init()-\u0026gt;ti.types.vector(size,ti.int32): # 为数组a和b赋值 a = ti.Vector([i for i in range(size)]) return a a = init() # 调用Taichi函数执行相加操作 # add_arrays(a, b, c) print(a) # 输出结果 # for i in range(size,size-10,-1): # print(f\u0026#34;c[{i}] = {a[i]}\u0026#34;) taichi 的filed 和 ndarray 都不用允许作为返回值以及在kernel内动态创建，但可以作为func的返回值。二者区别是，field不能作为参数传递，必须定义在全局，类似于cuda的动态存管，内部修改会直接影响外部结果。ndarray则相反，ndarray只能通过参数传递供kernel访问，即便是定义在全局。ndarray属于引用传递，因此内部修改也会影响外部结果。除了使用方式区别，field无法直接与其他python或numpy的变量类型交互，但是ndarray可以。因此filed更注重计算，ndarray则用于频繁与外部交互的情况。 taichi的types.vector类型的参数n虽然描述为维度，但vector本身为一维向量，并不具备shape属性，因此n等于向量长度。初始化时超出n长度的数据不会被接受，会自动截断。访问超过n的数据会报错。 id1 = index(1,2,3,4,5,6) print(id1[0]) # print(id1[4]) # print(id1[0,0,0]) ","date":"1 January 0001","permalink":"/posts/taichi/taichi-note-1/taichi-note-1/","section":"Posts","summary":"taichi目前可以自动并行嵌套循环，同时对于ti.","title":""},{"content":"","date":"1 January 0001","permalink":"/archive/","section":"Tang Zhu","summary":"","title":"Archive"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/tags/excalidraw/","section":"Tags","summary":"","title":"excalidraw"},{"content":" ⚓ # ⚓ O virgo, just do the right thing S.\n🌞 我的 MINE\nmineitem one mineitem two mineitem three 🔨 工具 TOOLs\ntoolitem three 📑 文档 DOCs\ndocitem one docitem two docitem three 🍺 博客 BLOGs\nblogitem one blogitem two blogitem three 🎉 休闲 LEISURE\nleisureitem one leisureitem three 🎧 影视 MOVIEs\nmovieitem one movieitem three 🧲 友链 LINKs\nnavitem two navitem three 🔖 # 🔖 Bookmarks InboX\nbookmark item one https://bookmark-item-one.com bookmark item two https://bookmark-item-two.com bookmark item three https://bookmark-item-three.com ","date":"1 January 0001","permalink":"/nav/","section":"Tang Zhu","summary":"⚓ # ⚓ O virgo, just do the right thing S.","title":"Nav"},{"content":"","date":"1 January 0001","permalink":"/search/","section":"Tang Zhu","summary":"","title":"Search"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]